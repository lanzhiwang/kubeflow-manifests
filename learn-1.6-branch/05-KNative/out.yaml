apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: knative-eventing
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    istio-injection: enabled
    serving.knative.dev/release: v1.2.5
  name: knative-serving
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.apiserver.resource.add" },
        { "type": "dev.knative.apiserver.resource.delete" },
        { "type": "dev.knative.apiserver.resource.update" },
        { "type": "dev.knative.apiserver.ref.add" },
        { "type": "dev.knative.apiserver.ref.delete" },
        { "type": "dev.knative.apiserver.ref.update" }
      ]
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/source: "true"
    eventing.knative.dev/release: v1.2.4
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: apiserversources.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
      - all
      - knative
      - sources
    kind: ApiServerSource
    plural: apiserversources
    singular: apiserversource
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            ApiServerSource is an event source that brings Kubernetes API
            server events into Knative.
          properties:
            spec:
              properties:
                ceOverrides:
                  description:
                    CloudEventOverrides defines overrides to control the
                    output format and modifications of the event sent to the sink.
                  properties:
                    extensions:
                      description:
                        Extensions specify what attribute are added or overridden
                        on the outbound event. Each `Extensions` key-value pair are
                        set on the event as an attribute extension independently.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                mode:
                  description:
                    EventMode controls the format of the event. `Reference`
                    sends a dataref event type for the resource under watch. `Resource`
                    send the full resource lifecycle event. Defaults to `Reference`
                  type: string
                owner:
                  description:
                    ResourceOwner is an additional filter to only track resources
                    that are owned by a specific resource type. If ResourceOwner matches
                    Resources[n] then Resources[n] is allowed to pass the ResourceOwner
                    filter.
                  properties:
                    apiVersion:
                      description: APIVersion - the API version of the resource to watch.
                      type: string
                    kind:
                      description: "Kind of the resource to watch. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                  type: object
                resources:
                  description:
                    Resource are the resources this source will track and
                    send related lifecycle events from the Kubernetes ApiServer, with
                    an optional label selector to help filter.
                  items:
                    properties:
                      apiVersion:
                        description:
                          APIVersion - the API version of the resource to
                          watch.
                        type: string
                      kind:
                        description: "Kind of the resource to watch. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                        type: string
                      selector:
                        description:
                          "LabelSelector filters this source to objects to
                          those resources pass the label selector. More info: http://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
                        properties:
                          matchExpressions:
                            description:
                              matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              properties:
                                key:
                                  description:
                                    key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description:
                                    operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description:
                                    values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty. This
                                    array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type: array
                          matchLabels:
                            description:
                              matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                    type: object
                  type: array
                serviceAccountName:
                  description:
                    ServiceAccountName is the name of the ServiceAccount
                    to use to run this source. Defaults to default if not set.
                  type: string
                sink:
                  description:
                    Sink is a reference to an object that will resolve to
                    a uri to use as the sink.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
              required:
                - resources
              type: object
            status:
              properties:
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                ceAttributes:
                  description:
                    CloudEventAttributes are the specific attributes that
                    the Source uses as part of its CloudEvents.
                  items:
                    properties:
                      source:
                        description: Source is the CloudEvents source attribute.
                        type: string
                      type:
                        description: Type refers to the CloudEvent type attribute.
                        type: string
                    type: object
                  type: array
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                sinkUri:
                  description:
                    SinkURI is the current active sink URI that has been
                    configured for the Source.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: v1.2.4
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: brokers.eventing.knative.dev
spec:
  group: eventing.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
    kind: Broker
    plural: brokers
    singular: broker
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            Broker collects a pool of events that are consumable using Triggers.
            Brokers provide a well-known endpoint for event delivery that senders can
            use with minimal knowledge of the event routing strategy. Subscribers use
            Triggers to request delivery of events from a Broker's pool to a specific
            URL or Addressable endpoint.
          properties:
            spec:
              description: Spec defines the desired state of the Broker.
              properties:
                config:
                  description:
                    Config is a KReference to the configuration that specifies
                    configuration options for this Broker. For example, this could be
                    a pointer to a ConfigMap.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    name:
                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: string
                    namespace:
                      description:
                        "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        This is optional field, it gets defaulted to the object holding
                        it if left out."
                      type: string
                  type: object
                delivery:
                  description:
                    Delivery contains the delivery spec for each trigger
                    to this Broker. Each trigger delivery spec, if any, overrides this
                    global delivery spec.
                  properties:
                    backoffDelay:
                      description:
                        "BackoffDelay is the delay before retrying. More
                        information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html
                        - https://en.wikipedia.org/wiki/ISO_8601  For linear policy,
                        backoff delay is backoffDelay*<numberOfRetries>. For exponential
                        policy, backoff delay is backoffDelay*2^<numberOfRetries>."
                      type: string
                    backoffPolicy:
                      description:
                        BackoffPolicy is the retry backoff policy (linear,
                        exponential).
                      type: string
                    deadLetterSink:
                      description:
                        DeadLetterSink is the sink receiving event that could
                        not be sent to a destination.
                      properties:
                        ref:
                          description: Ref points to an Addressable.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            kind:
                              description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                              type: string
                            name:
                              description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: string
                            namespace:
                              description:
                                "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                This is optional field, it gets defaulted to the object
                                holding it if left out."
                              type: string
                          type: object
                        uri:
                          description:
                            URI can be an absolute URL(non-empty scheme and
                            non-empty host) pointing to the target or a relative URI.
                            Relative URIs will be resolved using the base URI retrieved
                            from Ref.
                          type: string
                      type: object
                    retry:
                      description:
                        Retry is the minimum number of retries the sender
                        should attempt when sending an event before moving it to the
                        dead letter sink.
                      format: int32
                      type: integer
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              description:
                Status represents the current state of the Broker. This data
                may be out of date.
              properties:
                address:
                  description:
                    Broker is Addressable. It exposes the endpoint as an
                    URI to get events delivered into the Broker mesh.
                  properties:
                    url:
                      type: string
                  type: object
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                deadLetterSinkUri:
                  description:
                    DeadLetterSinkURI is the resolved URI of the dead letter
                    sink that will be used as a fallback when not specified by Triggers.
                  type: string
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: certificates.networking.internal.knative.dev
spec:
  group: networking.internal.knative.dev
  names:
    categories:
      - knative-internal
      - networking
    kind: Certificate
    plural: certificates
    shortNames:
      - kcert
    singular: certificate
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: v1.2.4
    knative.dev/crd-install: "true"
    kustomize.component: knative
    messaging.knative.dev/subscribable: "true"
  name: channels.messaging.knative.dev
spec:
  group: messaging.knative.dev
  names:
    categories:
      - all
      - knative
      - messaging
      - channel
    kind: Channel
    plural: channels
    shortNames:
      - ch
    singular: channel
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            Channel represents a generic Channel. It is normally used when
            we want a Channel, but do not need a specific Channel implementation.
          properties:
            spec:
              description: Spec defines the desired state of the Channel.
              properties:
                channelTemplate:
                  description:
                    ChannelTemplate specifies which Channel CRD to use to
                    create the CRD Channel backing this Channel. This is immutable after
                    creation. Normally this is set by the Channel defaulter, not directly
                    by the user.
                  properties:
                    apiVersion:
                      description:
                        "APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
                      type: string
                    kind:
                      description:
                        "Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    spec:
                      description:
                        Spec defines the Spec to use for each channel created.
                        Passed in verbatim to the Channel CRD as Spec section.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                delivery:
                  description:
                    DeliverySpec contains the default delivery spec for each
                    subscription to this Channelable. Each subscription delivery spec,
                    if any, overrides this global delivery spec.
                  properties:
                    backoffDelay:
                      description:
                        "BackoffDelay is the delay before retrying. More
                        information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html
                        - https://en.wikipedia.org/wiki/ISO_8601  For linear policy,
                        backoff delay is backoffDelay*<numberOfRetries>. For exponential
                        policy, backoff delay is backoffDelay*2^<numberOfRetries>."
                      type: string
                    backoffPolicy:
                      description:
                        BackoffPolicy is the retry backoff policy (linear,
                        exponential).
                      type: string
                    deadLetterSink:
                      description:
                        DeadLetterSink is the sink receiving event that could
                        not be sent to a destination.
                      properties:
                        ref:
                          description: Ref points to an Addressable.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            kind:
                              description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                              type: string
                            name:
                              description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: string
                            namespace:
                              description:
                                "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                This is optional field, it gets defaulted to the object
                                holding it if left out."
                              type: string
                          type: object
                        uri:
                          description:
                            URI can be an absolute URL(non-empty scheme and
                            non-empty host) pointing to the target or a relative URI.
                            Relative URIs will be resolved using the base URI retrieved
                            from Ref.
                          type: string
                      type: object
                    retry:
                      description:
                        Retry is the minimum number of retries the sender
                        should attempt when sending an event before moving it to the
                        dead letter sink.
                      format: int32
                      type: integer
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                subscribers:
                  description: This is the list of subscriptions for this subscribable.
                  items:
                    properties:
                      delivery:
                        description:
                          DeliverySpec contains options controlling the event
                          delivery
                        properties:
                          backoffDelay:
                            description:
                              "BackoffDelay is the delay before retrying.
                              More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html
                              - https://en.wikipedia.org/wiki/ISO_8601  For linear policy,
                              backoff delay is backoffDelay*<numberOfRetries>. For exponential
                              policy, backoff delay is backoffDelay*2^<numberOfRetries>."
                            type: string
                          backoffPolicy:
                            description:
                              BackoffPolicy is the retry backoff policy (linear,
                              exponential).
                            type: string
                          deadLetterSink:
                            description:
                              DeadLetterSink is the sink receiving event
                              that could not be sent to a destination.
                            properties:
                              ref:
                                description: Ref points to an Addressable.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  kind:
                                    description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                    type: string
                                  name:
                                    description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                    type: string
                                  namespace:
                                    description:
                                      "Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      This is optional field, it gets defaulted to the
                                      object holding it if left out."
                                    type: string
                                type: object
                              uri:
                                description:
                                  URI can be an absolute URL(non-empty scheme
                                  and non-empty host) pointing to the target or a relative
                                  URI. Relative URIs will be resolved using the base
                                  URI retrieved from Ref.
                                type: string
                            type: object
                          retry:
                            description:
                              Retry is the minimum number of retries the
                              sender should attempt when sending an event before moving
                              it to the dead letter sink.
                            format: int32
                            type: integer
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      generation:
                        description:
                          Generation of the origin of the subscriber with
                          uid:UID.
                        format: int64
                        type: integer
                      replyUri:
                        description: ReplyURI is the endpoint for the reply
                        type: string
                      subscriberUri:
                        description: SubscriberURI is the endpoint for the subscriber
                        type: string
                      uid:
                        description: UID is used to understand the origin of the subscriber.
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description:
                Status represents the current state of the Channel. This
                data may be out of date.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                channel:
                  description:
                    Channel is an KReference to the Channel CRD backing this
                    Channel.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    name:
                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: string
                    namespace:
                      description:
                        "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        This is optional field, it gets defaulted to the object holding
                        it if left out."
                      type: string
                  type: object
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                deadLetterChannel:
                  description:
                    DeadLetterChannel is a KReference and is set by the channel
                    when it supports native error handling via a channel Failed messages
                    are delivered here.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    name:
                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: string
                    namespace:
                      description:
                        "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        This is optional field, it gets defaulted to the object holding
                        it if left out."
                      type: string
                  type: object
                deadLetterSinkUri:
                  description:
                    DeadLetterSinkURI is the resolved URI of the dead letter
                    sink that will be used as a fallback when not specified by Triggers.
                  type: string
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                subscribers:
                  description:
                    This is the list of subscription's statuses for this
                    channel.
                  items:
                    properties:
                      message:
                        description:
                          A human readable message indicating details of
                          Ready status.
                        type: string
                      observedGeneration:
                        description:
                          Generation of the origin of the subscriber with
                          uid:UID.
                        format: int64
                        type: integer
                      ready:
                        description: Status of the subscriber.
                        type: string
                      uid:
                        description: UID is used to understand the origin of the subscriber.
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: clusterdomainclaims.networking.internal.knative.dev
spec:
  group: networking.internal.knative.dev
  names:
    categories:
      - knative-internal
      - networking
    kind: ClusterDomainClaim
    plural: clusterdomainclaims
    shortNames:
      - cdc
    singular: clusterdomainclaim
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    duck.knative.dev/podspecable: "true"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: configurations.serving.knative.dev
spec:
  group: serving.knative.dev
  names:
    categories:
      - all
      - knative
      - serving
    kind: Configuration
    plural: configurations
    shortNames:
      - config
      - cfg
    singular: configuration
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.latestCreatedRevisionName
          name: LatestCreated
          type: string
        - jsonPath: .status.latestReadyRevisionName
          name: LatestReady
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            'Configuration represents the "floating HEAD" of a linear history
            of Revisions. Users create new Revisions by updating the Configuration''s
            spec. The "latest created" revision''s name is available under status, as
            is the "latest ready" revision''s name. See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#configuration'
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description:
                ConfigurationSpec holds the desired state of the Configuration
                (from the client).
              properties:
                template:
                  description:
                    Template holds the latest specification for the Revision
                    to be stamped out.
                  properties:
                    metadata:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        finalizers:
                          items:
                            type: string
                          type: array
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    spec:
                      description:
                        RevisionSpec holds the desired state of the Revision
                        (from the client).
                      properties:
                        automountServiceAccountToken:
                          description:
                            AutomountServiceAccountToken indicates whether
                            a service account token should be automatically mounted.
                          type: boolean
                        containerConcurrency:
                          description:
                            ContainerConcurrency specifies the maximum allowed
                            in-flight (concurrent) requests per container of the Revision.  Defaults
                            to `0` which means concurrency to the application is not
                            limited, and the system decides the target concurrency for
                            the autoscaler.
                          format: int64
                          type: integer
                        containers:
                          description:
                            List of containers belonging to the pod. Containers
                            cannot currently be added or removed. There must be at least
                            one container in a Pod. Cannot be updated.
                          items:
                            description:
                              A single application container that you want
                              to run within a pod.
                            properties:
                              args:
                                description:
                                  'Arguments to the entrypoint. The docker
                                  image''s CMD is used if this is not provided. Variable
                                  references $(VAR_NAME) are expanded using the container''s
                                  environment. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged. Double
                                  $$ are reduced to a single $, which allows for escaping
                                  the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                  the string literal "$(VAR_NAME)". Escaped references
                                  will never be expanded, regardless of whether the
                                  variable exists or not. Cannot be updated. More info:
                                  https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                items:
                                  type: string
                                type: array
                              command:
                                description:
                                  'Entrypoint array. Not executed within
                                  a shell. The docker image''s ENTRYPOINT is used if
                                  this is not provided. Variable references $(VAR_NAME)
                                  are expanded using the container''s environment. If
                                  a variable cannot be resolved, the reference in the
                                  input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME)
                                  syntax: i.e. "$$(VAR_NAME)" will produce the string
                                  literal "$(VAR_NAME)". Escaped references will never
                                  be expanded, regardless of whether the variable exists
                                  or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                items:
                                  type: string
                                type: array
                              env:
                                description:
                                  List of environment variables to set in
                                  the container. Cannot be updated.
                                items:
                                  description:
                                    EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description:
                                        Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description:
                                        'Variable references $(VAR_NAME)
                                        are expanded using the previously defined environment
                                        variables in the container and any service environment
                                        variables. If a variable cannot be resolved,
                                        the reference in the input string will be unchanged.
                                        Double $$ are reduced to a single $, which allows
                                        for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                        will produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Defaults
                                        to "".'
                                      type: string
                                    valueFrom:
                                      description:
                                        Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description:
                                                "Name of the referent. More
                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?"
                                              type: string
                                            optional:
                                              description:
                                                Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                            - key
                                          type: object
                                        secretKeyRef:
                                          description:
                                            Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description:
                                                The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description:
                                                "Name of the referent. More
                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?"
                                              type: string
                                            optional:
                                              description:
                                                Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                            - key
                                          type: object
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  required:
                                    - name
                                  type: object
                                type: array
                              envFrom:
                                description:
                                  List of sources to populate environment
                                  variables in the container. The keys defined within
                                  a source must be a C_IDENTIFIER. All invalid keys
                                  will be reported as an event when the container is
                                  starting. When a key exists in multiple sources, the
                                  value associated with the last source will take precedence.
                                  Values defined by an Env with a duplicate key will
                                  take precedence. Cannot be updated.
                                items:
                                  description:
                                    EnvFromSource represents the source of
                                    a set of ConfigMaps
                                  properties:
                                    configMapRef:
                                      description: The ConfigMap to select from
                                      properties:
                                        name:
                                          description:
                                            "Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?"
                                          type: string
                                        optional:
                                          description:
                                            Specify whether the ConfigMap
                                            must be defined
                                          type: boolean
                                      type: object
                                    prefix:
                                      description:
                                        An optional identifier to prepend
                                        to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                      type: string
                                    secretRef:
                                      description: The Secret to select from
                                      properties:
                                        name:
                                          description:
                                            "Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?"
                                          type: string
                                        optional:
                                          description:
                                            Specify whether the Secret must
                                            be defined
                                          type: boolean
                                      type: object
                                  type: object
                                type: array
                              image:
                                description:
                                  "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                  This field is optional to allow higher level config
                                  management to default or override container images
                                  in workload controllers like Deployments and StatefulSets."
                                type: string
                              imagePullPolicy:
                                description:
                                  "Image pull policy. One of Always, Never,
                                  IfNotPresent. Defaults to Always if :latest tag is
                                  specified, or IfNotPresent otherwise. Cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                                type: string
                              livenessProbe:
                                description:
                                  "Periodic probe of container liveness.
                                  Container will be restarted if the probe fails. Cannot
                                  be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                properties:
                                  exec:
                                    description:
                                      One and only one of the following should
                                      be specified. Exec specifies the action to take.
                                    properties:
                                      command:
                                        description:
                                          Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/') in
                                          the container's filesystem. The command is
                                          simply exec'd, it is not run inside a shell,
                                          so traditional shell instructions ('|', etc)
                                          won't work. To use a shell, you need to explicitly
                                          call out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description:
                                      Minimum consecutive failures for the
                                      probe to be considered failed after having succeeded.
                                      Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  httpGet:
                                    description:
                                      HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description:
                                          Host name to connect to, defaults
                                          to the pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description:
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        items:
                                          description:
                                            HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      scheme:
                                        description:
                                          Scheme to use for connecting to
                                          the host. Defaults to HTTP.
                                        type: string
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  initialDelaySeconds:
                                    description:
                                      "Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description:
                                      How often (in seconds) to perform the
                                      probe.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description:
                                      Minimum consecutive successes for the
                                      probe to be considered successful after having
                                      failed. Defaults to 1. Must be 1 for liveness
                                      and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description:
                                      "TCPSocket specifies an action involving
                                      a TCP port. TCP hooks not yet supported TODO:
                                      implement a realistic TCP lifecycle hook"
                                    properties:
                                      host:
                                        description:
                                          "Optional: Host name to connect
                                          to, defaults to the pod IP."
                                        type: string
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  timeoutSeconds:
                                    description:
                                      "Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                    format: int32
                                    type: integer
                                type: object
                              name:
                                description:
                                  Name of the container specified as a DNS_LABEL.
                                  Each container in a pod must have a unique name (DNS_LABEL).
                                  Cannot be updated.
                                type: string
                              ports:
                                description:
                                  List of ports to expose from the container.
                                  Exposing a port here gives the system additional information
                                  about the network connections a container uses, but
                                  is primarily informational. Not specifying a port
                                  here DOES NOT prevent that port from being exposed.
                                  Any port which is listening on the default "0.0.0.0"
                                  address inside a container will be accessible from
                                  the network. Cannot be updated.
                                items:
                                  description:
                                    ContainerPort represents a network port
                                    in a single container.
                                  properties:
                                    containerPort:
                                      description:
                                        Number of port to expose on the pod's
                                        IP address. This must be a valid port number,
                                        0 < x < 65536.
                                      format: int32
                                      type: integer
                                    name:
                                      description:
                                        If specified, this must be an IANA_SVC_NAME
                                        and unique within the pod. Each named port in
                                        a pod must have a unique name. Name for the
                                        port that can be referred to by services.
                                      type: string
                                    protocol:
                                      default: TCP
                                      description:
                                        Protocol for port. Must be UDP, TCP,
                                        or SCTP. Defaults to "TCP".
                                      type: string
                                  required:
                                    - containerPort
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                                x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                x-kubernetes-list-type: map
                              readinessProbe:
                                description:
                                  "Periodic probe of container service readiness.
                                  Container will be removed from service endpoints if
                                  the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                properties:
                                  exec:
                                    description:
                                      One and only one of the following should
                                      be specified. Exec specifies the action to take.
                                    properties:
                                      command:
                                        description:
                                          Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/') in
                                          the container's filesystem. The command is
                                          simply exec'd, it is not run inside a shell,
                                          so traditional shell instructions ('|', etc)
                                          won't work. To use a shell, you need to explicitly
                                          call out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description:
                                      Minimum consecutive failures for the
                                      probe to be considered failed after having succeeded.
                                      Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  httpGet:
                                    description:
                                      HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description:
                                          Host name to connect to, defaults
                                          to the pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description:
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        items:
                                          description:
                                            HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      scheme:
                                        description:
                                          Scheme to use for connecting to
                                          the host. Defaults to HTTP.
                                        type: string
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  initialDelaySeconds:
                                    description:
                                      "Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description:
                                      How often (in seconds) to perform the
                                      probe.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description:
                                      Minimum consecutive successes for the
                                      probe to be considered successful after having
                                      failed. Defaults to 1. Must be 1 for liveness
                                      and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description:
                                      "TCPSocket specifies an action involving
                                      a TCP port. TCP hooks not yet supported TODO:
                                      implement a realistic TCP lifecycle hook"
                                    properties:
                                      host:
                                        description:
                                          "Optional: Host name to connect
                                          to, defaults to the pod IP."
                                        type: string
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  timeoutSeconds:
                                    description:
                                      "Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                    format: int32
                                    type: integer
                                type: object
                              resources:
                                description:
                                  "Compute Resources required by this container.
                                  Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description:
                                      "Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description:
                                      "Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                    type: object
                                type: object
                              securityContext:
                                description:
                                  "SecurityContext defines the security options
                                  the container should be run with. If set, the fields
                                  of SecurityContext override the equivalent fields
                                  of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                                properties:
                                  capabilities:
                                    description:
                                      The capabilities to add/drop when running
                                      containers. Defaults to the default set of capabilities
                                      granted by the container runtime.
                                    properties:
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description:
                                            Capability represent POSIX capabilities
                                            type
                                          type: string
                                        type: array
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  readOnlyRootFilesystem:
                                    description:
                                      Whether this container has a read-only
                                      root filesystem. Default is false.
                                    type: boolean
                                  runAsUser:
                                    description:
                                      The UID to run the entrypoint of the
                                      container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified in
                                      SecurityContext takes precedence.
                                    format: int64
                                    type: integer
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              terminationMessagePath:
                                description:
                                  "Optional: Path at which the file to which
                                  the container's termination message will be written
                                  is mounted into the container's filesystem. Message
                                  written is intended to be brief final status, such
                                  as an assertion failure message. Will be truncated
                                  by the node if greater than 4096 bytes. The total
                                  message length across all containers will be limited
                                  to 12kb. Defaults to /dev/termination-log. Cannot
                                  be updated."
                                type: string
                              terminationMessagePolicy:
                                description:
                                  Indicate how the termination message should
                                  be populated. File will use the contents of terminationMessagePath
                                  to populate the container status message on both success
                                  and failure. FallbackToLogsOnError will use the last
                                  chunk of container log output if the termination message
                                  file is empty and the container exited with an error.
                                  The log output is limited to 2048 bytes or 80 lines,
                                  whichever is smaller. Defaults to File. Cannot be
                                  updated.
                                type: string
                              volumeMounts:
                                description:
                                  Pod volumes to mount into the container's
                                  filesystem. Cannot be updated.
                                items:
                                  description:
                                    VolumeMount describes a mounting of a
                                    Volume within a container.
                                  properties:
                                    mountPath:
                                      description:
                                        Path within the container at which
                                        the volume should be mounted.  Must not contain
                                        ':'.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description:
                                        Mounted read-only if true, read-write
                                        otherwise (false or unspecified). Defaults to
                                        false.
                                      type: boolean
                                    subPath:
                                      description:
                                        Path within the volume from which
                                        the container's volume should be mounted. Defaults
                                        to "" (volume's root).
                                      type: string
                                  required:
                                    - mountPath
                                    - name
                                  type: object
                                type: array
                              workingDir:
                                description:
                                  Container's working directory. If not specified,
                                  the container runtime's default will be used, which
                                  might be configured in the container image. Cannot
                                  be updated.
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                        enableServiceLinks:
                          description:
                            "EnableServiceLinks indicates whether information
                            about services should be injected into pod's environment
                            variables, matching the syntax of Docker links. Optional:
                            Defaults to true."
                          type: boolean
                        imagePullSecrets:
                          description:
                            "ImagePullSecrets is an optional list of references
                            to secrets in the same namespace to use for pulling any
                            of the images used by this PodSpec. If specified, these
                            secrets will be passed to individual puller implementations
                            for them to use. For example, in the case of docker, only
                            DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
                          items:
                            description:
                              LocalObjectReference contains enough information
                              to let you locate the referenced object inside the same
                              namespace.
                            properties:
                              name:
                                description:
                                  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                            type: object
                          type: array
                        serviceAccountName:
                          description:
                            "ServiceAccountName is the name of the ServiceAccount
                            to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
                          type: string
                        timeoutSeconds:
                          description:
                            TimeoutSeconds is the maximum duration in seconds
                            that the request routing layer will wait for a request delivered
                            to a container to begin replying (send network traffic).
                            If unspecified, a system default will be provided.
                          format: int64
                          type: integer
                        volumes:
                          description:
                            "List of volumes that can be mounted by containers
                            belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes"
                          items:
                            description:
                              Volume represents a named volume in a pod that
                              may be accessed by any container in the pod.
                            properties:
                              configMap:
                                description:
                                  ConfigMap represents a configMap that should
                                  populate this volume
                                properties:
                                  defaultMode:
                                    description:
                                      "Optional: mode bits used to set permissions
                                      on created files by default. Must be an octal
                                      value between 0000 and 0777 or a decimal value
                                      between 0 and 511. YAML accepts both octal and
                                      decimal values, JSON requires decimal values for
                                      mode bits. Defaults to 0644. Directories within
                                      the path are not affected by this setting. This
                                      might be in conflict with other options that affect
                                      the file mode, like fsGroup, and the result can
                                      be other mode bits set."
                                    format: int32
                                    type: integer
                                  items:
                                    description:
                                      If unspecified, each key-value pair
                                      in the Data field of the referenced ConfigMap
                                      will be projected into the volume as a file whose
                                      name is the key and content is the value. If specified,
                                      the listed keys will be projected into the specified
                                      paths, and unlisted keys will not be present.
                                      If a key is specified which is not present in
                                      the ConfigMap, the volume setup will error unless
                                      it is marked optional. Paths must be relative
                                      and may not contain the '..' path or start with
                                      '..'.
                                    items:
                                      description:
                                        Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: The key to project.
                                          type: string
                                        mode:
                                          description:
                                            "Optional: mode bits used to
                                            set permissions on this file. Must be an
                                            octal value between 0000 and 0777 or a decimal
                                            value between 0 and 511. YAML accepts both
                                            octal and decimal values, JSON requires
                                            decimal values for mode bits. If not specified,
                                            the volume defaultMode will be used. This
                                            might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits set."
                                          format: int32
                                          type: integer
                                        path:
                                          description:
                                            The relative path of the file
                                            to map the key to. May not be an absolute
                                            path. May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                        - key
                                        - path
                                      type: object
                                    type: array
                                  name:
                                    description:
                                      "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?"
                                    type: string
                                  optional:
                                    description:
                                      Specify whether the ConfigMap or its
                                      keys must be defined
                                    type: boolean
                                type: object
                              name:
                                description:
                                  "Volume's name. Must be a DNS_LABEL and
                                  unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                type: string
                              projected:
                                description:
                                  Items for all in one resources secrets,
                                  configmaps, and downward API
                                properties:
                                  defaultMode:
                                    description:
                                      Mode bits used to set permissions on
                                      created files by default. Must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. Directories within the path are not affected
                                      by this setting. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.
                                    format: int32
                                    type: integer
                                  sources:
                                    description: list of volume projections
                                    items:
                                      description:
                                        Projection that may be projected
                                        along with other supported volume types
                                      properties:
                                        configMap:
                                          description:
                                            information about the configMap
                                            data to project
                                          properties:
                                            items:
                                              description:
                                                If unspecified, each key-value
                                                pair in the Data field of the referenced
                                                ConfigMap will be projected into the
                                                volume as a file whose name is the key
                                                and content is the value. If specified,
                                                the listed keys will be projected into
                                                the specified paths, and unlisted keys
                                                will not be present. If a key is specified
                                                which is not present in the ConfigMap,
                                                the volume setup will error unless it
                                                is marked optional. Paths must be relative
                                                and may not contain the '..' path or
                                                start with '..'.
                                              items:
                                                description:
                                                  Maps a string key to a
                                                  path within a volume.
                                                properties:
                                                  key:
                                                    description: The key to project.
                                                    type: string
                                                  mode:
                                                    description:
                                                      "Optional: mode bits
                                                      used to set permissions on this
                                                      file. Must be an octal value between
                                                      0000 and 0777 or a decimal value
                                                      between 0 and 511. YAML accepts
                                                      both octal and decimal values,
                                                      JSON requires decimal values for
                                                      mode bits. If not specified, the
                                                      volume defaultMode will be used.
                                                      This might be in conflict with
                                                      other options that affect the
                                                      file mode, like fsGroup, and the
                                                      result can be other mode bits
                                                      set."
                                                    format: int32
                                                    type: integer
                                                  path:
                                                    description:
                                                      The relative path of
                                                      the file to map the key to. May
                                                      not be an absolute path. May not
                                                      contain the path element '..'.
                                                      May not start with the string
                                                      '..'.
                                                    type: string
                                                required:
                                                  - key
                                                  - path
                                                type: object
                                              type: array
                                            name:
                                              description:
                                                "Name of the referent. More
                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?"
                                              type: string
                                            optional:
                                              description:
                                                Specify whether the ConfigMap
                                                or its keys must be defined
                                              type: boolean
                                          type: object
                                        secret:
                                          description:
                                            information about the secret
                                            data to project
                                          properties:
                                            items:
                                              description:
                                                If unspecified, each key-value
                                                pair in the Data field of the referenced
                                                Secret will be projected into the volume
                                                as a file whose name is the key and
                                                content is the value. If specified,
                                                the listed keys will be projected into
                                                the specified paths, and unlisted keys
                                                will not be present. If a key is specified
                                                which is not present in the Secret,
                                                the volume setup will error unless it
                                                is marked optional. Paths must be relative
                                                and may not contain the '..' path or
                                                start with '..'.
                                              items:
                                                description:
                                                  Maps a string key to a
                                                  path within a volume.
                                                properties:
                                                  key:
                                                    description: The key to project.
                                                    type: string
                                                  mode:
                                                    description:
                                                      "Optional: mode bits
                                                      used to set permissions on this
                                                      file. Must be an octal value between
                                                      0000 and 0777 or a decimal value
                                                      between 0 and 511. YAML accepts
                                                      both octal and decimal values,
                                                      JSON requires decimal values for
                                                      mode bits. If not specified, the
                                                      volume defaultMode will be used.
                                                      This might be in conflict with
                                                      other options that affect the
                                                      file mode, like fsGroup, and the
                                                      result can be other mode bits
                                                      set."
                                                    format: int32
                                                    type: integer
                                                  path:
                                                    description:
                                                      The relative path of
                                                      the file to map the key to. May
                                                      not be an absolute path. May not
                                                      contain the path element '..'.
                                                      May not start with the string
                                                      '..'.
                                                    type: string
                                                required:
                                                  - key
                                                  - path
                                                type: object
                                              type: array
                                            name:
                                              description:
                                                "Name of the referent. More
                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?"
                                              type: string
                                            optional:
                                              description:
                                                Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          type: object
                                        serviceAccountToken:
                                          description:
                                            information about the serviceAccountToken
                                            data to project
                                          properties:
                                            audience:
                                              description:
                                                Audience is the intended
                                                audience of the token. A recipient of
                                                a token must identify itself with an
                                                identifier specified in the audience
                                                of the token, and otherwise should reject
                                                the token. The audience defaults to
                                                the identifier of the apiserver.
                                              type: string
                                            expirationSeconds:
                                              description:
                                                ExpirationSeconds is the
                                                requested duration of validity of the
                                                service account token. As the token
                                                approaches expiration, the kubelet volume
                                                plugin will proactively rotate the service
                                                account token. The kubelet will start
                                                trying to rotate the token if the token
                                                is older than 80 percent of its time
                                                to live or if the token is older than
                                                24 hours.Defaults to 1 hour and must
                                                be at least 10 minutes.
                                              format: int64
                                              type: integer
                                            path:
                                              description:
                                                Path is the path relative
                                                to the mount point of the file to project
                                                the token into.
                                              type: string
                                          required:
                                            - path
                                          type: object
                                      type: object
                                    type: array
                                type: object
                              secret:
                                description:
                                  "Secret represents a secret that should
                                  populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                properties:
                                  defaultMode:
                                    description:
                                      "Optional: mode bits used to set permissions
                                      on created files by default. Must be an octal
                                      value between 0000 and 0777 or a decimal value
                                      between 0 and 511. YAML accepts both octal and
                                      decimal values, JSON requires decimal values for
                                      mode bits. Defaults to 0644. Directories within
                                      the path are not affected by this setting. This
                                      might be in conflict with other options that affect
                                      the file mode, like fsGroup, and the result can
                                      be other mode bits set."
                                    format: int32
                                    type: integer
                                  items:
                                    description:
                                      If unspecified, each key-value pair
                                      in the Data field of the referenced Secret will
                                      be projected into the volume as a file whose name
                                      is the key and content is the value. If specified,
                                      the listed keys will be projected into the specified
                                      paths, and unlisted keys will not be present.
                                      If a key is specified which is not present in
                                      the Secret, the volume setup will error unless
                                      it is marked optional. Paths must be relative
                                      and may not contain the '..' path or start with
                                      '..'.
                                    items:
                                      description:
                                        Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: The key to project.
                                          type: string
                                        mode:
                                          description:
                                            "Optional: mode bits used to
                                            set permissions on this file. Must be an
                                            octal value between 0000 and 0777 or a decimal
                                            value between 0 and 511. YAML accepts both
                                            octal and decimal values, JSON requires
                                            decimal values for mode bits. If not specified,
                                            the volume defaultMode will be used. This
                                            might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits set."
                                          format: int32
                                          type: integer
                                        path:
                                          description:
                                            The relative path of the file
                                            to map the key to. May not be an absolute
                                            path. May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                        - key
                                        - path
                                      type: object
                                    type: array
                                  optional:
                                    description:
                                      Specify whether the Secret or its keys
                                      must be defined
                                    type: boolean
                                  secretName:
                                    description:
                                      "Name of the secret in the pod's namespace
                                      to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                    type: string
                                type: object
                            required:
                              - name
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                      required:
                        - containers
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
              type: object
            status:
              description:
                ConfigurationStatus communicates the observed state of the
                Configuration (from the controller).
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    description:
                      "Condition defines a readiness condition for a Knative
                      resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties"
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                latestCreatedRevisionName:
                  description:
                    LatestCreatedRevisionName is the last revision that was
                    created from this Configuration. It might not be ready yet, for
                    that use LatestReadyRevisionName.
                  type: string
                latestReadyRevisionName:
                  description:
                    LatestReadyRevisionName holds the name of the latest
                    Revision stamped out from this Configuration that has had its "Ready"
                    condition become "True".
                  type: string
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/source: "true"
    eventing.knative.dev/release: v1.2.4
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: containersources.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
      - all
      - knative
      - sources
    kind: ContainerSource
    plural: containersources
    singular: containersource
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            ContainerSource is an event source that starts a container image
            which generates events under certain situations and sends messages to a
            sink URI
          properties:
            spec:
              properties:
                ceOverrides:
                  description:
                    CloudEventOverrides defines overrides to control the
                    output format and modifications of the event sent to the sink.
                  properties:
                    extensions:
                      description:
                        Extensions specify what attribute are added or overridden
                        on the outbound event. Each `Extensions` key-value pair are
                        set on the event as an attribute extension independently.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                sink:
                  description:
                    Sink is a reference to an object that will resolve to
                    a uri to use as the sink.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
                template:
                  description:
                    "A template in the shape of `Deployment.spec.template`
                    to be used for this ContainerSource. More info: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/"
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
            status:
              properties:
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                ceAttributes:
                  description:
                    CloudEventAttributes are the specific attributes that
                    the Source uses as part of its CloudEvents.
                  items:
                    properties:
                      source:
                        description: Source is the CloudEvents source attribute.
                        type: string
                      type:
                        description: Type refers to the CloudEvent type attribute.
                        type: string
                    type: object
                  type: array
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                sinkUri:
                  description:
                    SinkURI is the current active sink URI that has been
                    configured for the Source.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: domainmappings.serving.knative.dev
spec:
  group: serving.knative.dev
  names:
    categories:
      - all
      - knative
      - serving
    kind: DomainMapping
    plural: domainmappings
    shortNames:
      - dm
    singular: domainmapping
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: DomainMapping is a mapping from a custom hostname to an Addressable.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description:
                "Spec is the desired state of the DomainMapping. More info:
                https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
              properties:
                ref:
                  description:
                    "Ref specifies the target of the Domain Mapping. \n The
                    object identified by the Ref must be an Addressable with a URL of
                    the form `{name}.{namespace}.{domain}` where `{domain}` is the cluster
                    domain, and `{name}` and `{namespace}` are the name and namespace
                    of a Kubernetes Service. \n This contract is satisfied by Knative
                    types such as Knative Services and Knative Routes, and by Kubernetes
                    Services."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    group:
                      description:
                        "Group of the API, without the version of the group.
                        This can be used as an alternative to the APIVersion, and then
                        resolved using ResolveGroup. Note: This API is EXPERIMENTAL
                        and might break anytime. For more details: https://github.com/knative/eventing/issues/5086"
                      type: string
                    kind:
                      description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    name:
                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: string
                    namespace:
                      description:
                        "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        This is optional field, it gets defaulted to the object holding
                        it if left out."
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                tls:
                  description:
                    TLS allows the DomainMapping to terminate TLS traffic
                    with an existing secret.
                  properties:
                    secretName:
                      description:
                        SecretName is the name of the existing secret used
                        to terminate TLS traffic.
                      type: string
                  required:
                    - secretName
                  type: object
              required:
                - ref
              type: object
            status:
              description:
                "Status is the current state of the DomainMapping. More info:
                https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
              properties:
                address:
                  description:
                    Address holds the information needed for a DomainMapping
                    to be the target of an event.
                  properties:
                    url:
                      type: string
                  type: object
                annotations:
                  additionalProperties:
                    type: string
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    description:
                      "Condition defines a readiness condition for a Knative
                      resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties"
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                url:
                  description: URL is the URL of this DomainMapping.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: DomainMapping is a mapping from a custom hostname to an Addressable.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description:
                "Spec is the desired state of the DomainMapping. More info:
                https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
              properties:
                ref:
                  description:
                    "Ref specifies the target of the Domain Mapping. \n The
                    object identified by the Ref must be an Addressable with a URL of
                    the form `{name}.{namespace}.{domain}` where `{domain}` is the cluster
                    domain, and `{name}` and `{namespace}` are the name and namespace
                    of a Kubernetes Service. \n This contract is satisfied by Knative
                    types such as Knative Services and Knative Routes, and by Kubernetes
                    Services."
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    group:
                      description:
                        "Group of the API, without the version of the group.
                        This can be used as an alternative to the APIVersion, and then
                        resolved using ResolveGroup. Note: This API is EXPERIMENTAL
                        and might break anytime. For more details: https://github.com/knative/eventing/issues/5086"
                      type: string
                    kind:
                      description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    name:
                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: string
                    namespace:
                      description:
                        "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        This is optional field, it gets defaulted to the object holding
                        it if left out."
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                tls:
                  description:
                    TLS allows the DomainMapping to terminate TLS traffic
                    with an existing secret.
                  properties:
                    secretName:
                      description:
                        SecretName is the name of the existing secret used
                        to terminate TLS traffic.
                      type: string
                  required:
                    - secretName
                  type: object
              required:
                - ref
              type: object
            status:
              description:
                "Status is the current state of the DomainMapping. More info:
                https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
              properties:
                address:
                  description:
                    Address holds the information needed for a DomainMapping
                    to be the target of an event.
                  properties:
                    url:
                      type: string
                  type: object
                annotations:
                  additionalProperties:
                    type: string
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    description:
                      "Condition defines a readiness condition for a Knative
                      resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties"
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                url:
                  description: URL is the URL of this DomainMapping.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: eventtypes.eventing.knative.dev
spec:
  group: eventing.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
    kind: EventType
    plural: eventtypes
    singular: eventtype
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.type
          name: Type
          type: string
        - jsonPath: .spec.source
          name: Source
          type: string
        - jsonPath: .spec.schema
          name: Schema
          type: string
        - jsonPath: .spec.broker
          name: Broker
          type: string
        - jsonPath: .spec.description
          name: Description
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description:
            EventType represents a type of event that can be consumed from
            a Broker.
          properties:
            spec:
              description: Spec defines the desired state of the EventType.
              properties:
                broker:
                  type: string
                description:
                  description:
                    Description is an optional field used to describe the
                    EventType, in any meaningful way.
                  type: string
                schema:
                  description:
                    Schema is a URI, it represents the CloudEvents schemaurl
                    extension attribute. It may be a JSON schema, a protobuf schema,
                    etc. It is optional.
                  type: string
                schemaData:
                  description:
                    SchemaData allows the CloudEvents schema to be stored
                    directly in the EventType. Content is dependent on the encoding.
                    Optional attribute. The contents are not validated or manipulated
                    by the system.
                  type: string
                source:
                  description: Source is a URI, it represents the CloudEvents source.
                  type: string
                type:
                  description: Type represents the CloudEvents type. It is authoritative.
                  type: string
              type: object
            status:
              description:
                Status represents the current state of the EventType. This
                data may be out of date.
              properties:
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    knative.dev/crd-install: "true"
  name: images.caching.internal.knative.dev
spec:
  group: caching.internal.knative.dev
  names:
    categories:
      - knative-internal
      - caching
    kind: Image
    plural: images
    shortNames:
      - img
    singular: image
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.image
          name: Image
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: ingresses.networking.internal.knative.dev
spec:
  group: networking.internal.knative.dev
  names:
    categories:
      - knative-internal
      - networking
    kind: Ingress
    plural: ingresses
    shortNames:
      - kingress
      - king
    singular: ingress
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: metrics.autoscaling.internal.knative.dev
spec:
  group: autoscaling.internal.knative.dev
  names:
    categories:
      - knative-internal
      - autoscaling
    kind: Metric
    plural: metrics
    singular: metric
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description:
            Metric represents a resource to configure the metric collector
            with.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds the desired state of the Metric (from the client).
              properties:
                panicWindow:
                  description:
                    PanicWindow is the aggregation window for metrics where
                    quick reactions are needed.
                  format: int64
                  type: integer
                scrapeTarget:
                  description:
                    ScrapeTarget is the K8s service that publishes the metric
                    endpoint.
                  type: string
                stableWindow:
                  description:
                    StableWindow is the aggregation window for metrics in
                    a stable state.
                  format: int64
                  type: integer
              required:
                - panicWindow
                - scrapeTarget
                - stableWindow
              type: object
            status:
              description:
                Status communicates the observed state of the Metric (from
                the controller).
              properties:
                annotations:
                  additionalProperties:
                    type: string
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    description:
                      "Condition defines a readiness condition for a Knative
                      resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties"
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: v1.2.4
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: parallels.flows.knative.dev
spec:
  group: flows.knative.dev
  names:
    categories:
      - all
      - knative
      - flows
    kind: Parallel
    plural: parallels
    singular: parallel
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            Parallel defines conditional branches that will be wired in series
            through Channels and Subscriptions.
          properties:
            spec:
              description: Spec defines the desired state of the Parallel.
              properties:
                branches:
                  description: Branches is the list of Filter/Subscribers pairs.
                  items:
                    properties:
                      delivery:
                        description:
                          Delivery is the delivery specification for events
                          to the subscriber This includes things like retries, DLQ,
                          etc.
                        properties:
                          backoffDelay:
                            description:
                              "BackoffDelay is the delay before retrying.
                              More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html
                              - https://en.wikipedia.org/wiki/ISO_8601  For linear policy,
                              backoff delay is backoffDelay*<numberOfRetries>. For exponential
                              policy, backoff delay is backoffDelay*2^<numberOfRetries>."
                            type: string
                          backoffPolicy:
                            description:
                              BackoffPolicy is the retry backoff policy (linear,
                              exponential).
                            type: string
                          deadLetterSink:
                            description:
                              DeadLetterSink is the sink receiving event
                              that could not be sent to a destination.
                            properties:
                              ref:
                                description: Ref points to an Addressable.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  kind:
                                    description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                    type: string
                                  name:
                                    description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                    type: string
                                  namespace:
                                    description:
                                      "Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      This is optional field, it gets defaulted to the
                                      object holding it if left out."
                                    type: string
                                type: object
                              uri:
                                description:
                                  URI can be an absolute URL(non-empty scheme
                                  and non-empty host) pointing to the target or a relative
                                  URI. Relative URIs will be resolved using the base
                                  URI retrieved from Ref.
                                type: string
                            type: object
                          retry:
                            description:
                              Retry is the minimum number of retries the
                              sender should attempt when sending an event before moving
                              it to the dead letter sink.
                            format: int32
                            type: integer
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      filter:
                        description: Filter is the expression guarding the branch
                        properties:
                          ref:
                            description: Ref points to an Addressable.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              kind:
                                description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                type: string
                              namespace:
                                description:
                                  "Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                  This is optional field, it gets defaulted to the object
                                  holding it if left out."
                                type: string
                            type: object
                          uri:
                            description:
                              URI can be an absolute URL(non-empty scheme
                              and non-empty host) pointing to the target or a relative
                              URI. Relative URIs will be resolved using the base URI
                              retrieved from Ref.
                            type: string
                        type: object
                      reply:
                        description:
                          Reply is a Reference to where the result of Subscriber
                          of this case gets sent to. If not specified, sent the result
                          to the Parallel Reply
                        properties:
                          ref:
                            description: Ref points to an Addressable.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              kind:
                                description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                type: string
                              namespace:
                                description:
                                  "Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                  This is optional field, it gets defaulted to the object
                                  holding it if left out."
                                type: string
                            type: object
                          uri:
                            description:
                              URI can be an absolute URL(non-empty scheme
                              and non-empty host) pointing to the target or a relative
                              URI. Relative URIs will be resolved using the base URI
                              retrieved from Ref.
                            type: string
                        type: object
                      subscriber:
                        description:
                          Subscriber receiving the event when the filter
                          passes
                        properties:
                          ref:
                            description: Ref points to an Addressable.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              kind:
                                description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                type: string
                              namespace:
                                description:
                                  "Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                  This is optional field, it gets defaulted to the object
                                  holding it if left out."
                                type: string
                            type: object
                          uri:
                            description:
                              URI can be an absolute URL(non-empty scheme
                              and non-empty host) pointing to the target or a relative
                              URI. Relative URIs will be resolved using the base URI
                              retrieved from Ref.
                            type: string
                        type: object
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                channelTemplate:
                  description:
                    ChannelTemplate specifies which Channel CRD to use. If
                    left unspecified, it is set to the default Channel CRD for the namespace
                    (or cluster, in case there are no defaults for the namespace).
                  properties:
                    apiVersion:
                      description:
                        "APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
                      type: string
                    kind:
                      description:
                        "Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    spec:
                      description:
                        Spec defines the Spec to use for each channel created.
                        Passed in verbatim to the Channel CRD as Spec section.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                reply:
                  description:
                    Reply is a Reference to where the result of a case Subscriber
                    gets sent to when the case does not have a Reply
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
              type: object
            status:
              description:
                Status represents the current state of the Parallel. This
                data may be out of date.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                branchStatuses:
                  description:
                    BranchStatuses is an array of corresponding to branch
                    statuses. Matches the Spec.Branches array in the order.
                  items:
                    properties:
                      filterChannelStatus:
                        description:
                          FilterChannelStatus corresponds to the filter channel
                          status.
                        properties:
                          channel:
                            description:
                              Channel is the reference to the underlying
                              channel.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description:
                                  'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object.'
                                type: string
                              kind:
                                description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                type: string
                              namespace:
                                description:
                                  "Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                                type: string
                              resourceVersion:
                                description:
                                  "Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                                type: string
                              uid:
                                description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                                type: string
                            type: object
                          ready:
                            description:
                              ReadyCondition indicates whether the Channel
                              is ready or not.
                            properties:
                              message:
                                description:
                                  A human readable message indicating details
                                  about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              severity:
                                description:
                                  Severity with which to treat failures of
                                  this type of condition. When this is not specified,
                                  it defaults to Error.
                                type: string
                              status:
                                description:
                                  Status of the condition, one of True, False,
                                  Unknown.
                                type: string
                              type:
                                description: Type of condition.
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      filterSubscriptionStatus:
                        description:
                          FilterSubscriptionStatus corresponds to the filter
                          subscription status.
                        properties:
                          ready:
                            description:
                              ReadyCondition indicates whether the Subscription
                              is ready or not.
                            properties:
                              message:
                                description:
                                  A human readable message indicating details
                                  about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              severity:
                                description:
                                  Severity with which to treat failures of
                                  this type of condition. When this is not specified,
                                  it defaults to Error.
                                type: string
                              status:
                                description:
                                  Status of the condition, one of True, False,
                                  Unknown.
                                type: string
                              type:
                                description: Type of condition.
                                type: string
                            type: object
                          subscription:
                            description:
                              Subscription is the reference to the underlying
                              Subscription.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description:
                                  'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object.'
                                type: string
                              kind:
                                description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                type: string
                              namespace:
                                description:
                                  "Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                                type: string
                              resourceVersion:
                                description:
                                  "Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                                type: string
                              uid:
                                description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                                type: string
                            type: object
                        type: object
                      subscriberSubscriptionStatus:
                        description:
                          SubscriptionStatus corresponds to the subscriber
                          subscription status.
                        properties:
                          ready:
                            description:
                              ReadyCondition indicates whether the Subscription
                              is ready or not.
                            properties:
                              message:
                                description:
                                  A human readable message indicating details
                                  about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              severity:
                                description:
                                  Severity with which to treat failures of
                                  this type of condition. When this is not specified,
                                  it defaults to Error.
                                type: string
                              status:
                                description:
                                  Status of the condition, one of True, False,
                                  Unknown.
                                type: string
                              type:
                                description: Type of condition.
                                type: string
                            type: object
                          subscription:
                            description:
                              Subscription is the reference to the underlying
                              Subscription.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description:
                                  'If referring to a piece of an object instead
                                  of an entire object, this string should contain a
                                  valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to
                                  have some well-defined way of referencing a part of
                                  an object.'
                                type: string
                              kind:
                                description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                type: string
                              name:
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                type: string
                              namespace:
                                description:
                                  "Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                                type: string
                              resourceVersion:
                                description:
                                  "Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                                type: string
                              uid:
                                description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                                type: string
                            type: object
                        type: object
                    type: object
                  type: array
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    type: object
                  type: array
                ingressChannelStatus:
                  description:
                    IngressChannelStatus corresponds to the ingress channel
                    status.
                  properties:
                    channel:
                      description: Channel is the reference to the underlying channel.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description:
                            'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within
                            a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]"
                            (container with index 2 in this pod). This syntax is chosen
                            only to have some well-defined way of referencing a part
                            of an object.'
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description: "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                          type: string
                        resourceVersion:
                          description:
                            "Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                          type: string
                        uid:
                          description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                          type: string
                      type: object
                    ready:
                      description:
                        ReadyCondition indicates whether the Channel is ready
                        or not.
                      properties:
                        message:
                          description:
                            A human readable message indicating details about
                            the transition.
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          type: string
                        severity:
                          description:
                            Severity with which to treat failures of this
                            type of condition. When this is not specified, it defaults
                            to Error.
                          type: string
                        status:
                          description:
                            Status of the condition, one of True, False,
                            Unknown.
                          type: string
                        type:
                          description: Type of condition.
                          type: string
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.sources.ping" }
      ]
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/source: "true"
    eventing.knative.dev/release: v1.2.4
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: pingsources.sources.knative.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: eventing-webhook
          namespace: knative-eventing
      conversionReviewVersions:
        - v1
        - v1beta1
  group: sources.knative.dev
  names:
    categories:
      - all
      - knative
      - sources
    kind: PingSource
    plural: pingsources
    singular: pingsource
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .spec.schedule
          name: Schedule
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description:
            PingSource describes an event source with a fixed payload produced
            on a specified cron schedule.
          properties:
            spec:
              description:
                PingSourceSpec defines the desired state of the PingSource
                (from the client).
              properties:
                ceOverrides:
                  description:
                    CloudEventOverrides defines overrides to control the
                    output format and modifications of the event sent to the sink.
                  properties:
                    extensions:
                      additionalProperties:
                        type: string
                      description:
                        Extensions specify what attribute are added or overridden
                        on the outbound event. Each `Extensions` key-value pair are
                        set on the event as an attribute extension independently.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                contentType:
                  description:
                    ContentType is the media type of `data` or `dataBase64`.
                    Default is empty.
                  type: string
                data:
                  description:
                    Data is data used as the body of the event posted to
                    the sink. Default is empty. Mutually exclusive with `dataBase64`.
                  type: string
                dataBase64:
                  description:
                    DataBase64 is the base64-encoded string of the actual
                    event's body posted to the sink. Default is empty. Mutually exclusive
                    with `data`.
                  type: string
                schedule:
                  description: Schedule is the cron schedule. Defaults to `* * * * *`.
                  type: string
                sink:
                  description:
                    Sink is a reference to an object that will resolve to
                    a uri to use as the sink.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
                timezone:
                  description:
                    "Timezone modifies the actual time relative to the specified
                    timezone. Defaults to the system time zone. More general information
                    about time zones: https://www.iana.org/time-zones List of valid
                    timezone values: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
                  type: string
              type: object
            status:
              description:
                PingSourceStatus defines the observed state of PingSource
                (from the controller).
              properties:
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                ceAttributes:
                  description:
                    CloudEventAttributes are the specific attributes that
                    the Source uses as part of its CloudEvents.
                  items:
                    properties:
                      source:
                        description: Source is the CloudEvents source attribute.
                        type: string
                      type:
                        description: Type refers to the CloudEvent type attribute.
                        type: string
                    type: object
                  type: array
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the "Generation" of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                sinkUri:
                  description:
                    SinkURI is the current active sink URI that has been
                    configured for the Source.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .spec.schedule
          name: Schedule
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            PingSource describes an event source with a fixed payload produced
            on a specified cron schedule.
          properties:
            spec:
              description:
                PingSourceSpec defines the desired state of the PingSource
                (from the client).
              properties:
                ceOverrides:
                  description:
                    CloudEventOverrides defines overrides to control the
                    output format and modifications of the event sent to the sink.
                  properties:
                    extensions:
                      additionalProperties:
                        type: string
                      description:
                        Extensions specify what attribute are added or overridden
                        on the outbound event. Each `Extensions` key-value pair are
                        set on the event as an attribute extension independently.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                contentType:
                  description:
                    ContentType is the media type of `data` or `dataBase64`.
                    Default is empty.
                  type: string
                data:
                  description:
                    Data is data used as the body of the event posted to
                    the sink. Default is empty. Mutually exclusive with `dataBase64`.
                  type: string
                dataBase64:
                  description:
                    DataBase64 is the base64-encoded string of the actual
                    event's body posted to the sink. Default is empty. Mutually exclusive
                    with `data`.
                  type: string
                schedule:
                  description: Schedule is the cron schedule. Defaults to `* * * * *`.
                  type: string
                sink:
                  description:
                    Sink is a reference to an object that will resolve to
                    a uri to use as the sink.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
                timezone:
                  description:
                    "Timezone modifies the actual time relative to the specified
                    timezone. Defaults to the system time zone. More general information
                    about time zones: https://www.iana.org/time-zones List of valid
                    timezone values: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
                  type: string
              type: object
            status:
              description:
                PingSourceStatus defines the observed state of PingSource
                (from the controller).
              properties:
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                ceAttributes:
                  description:
                    CloudEventAttributes are the specific attributes that
                    the Source uses as part of its CloudEvents.
                  items:
                    properties:
                      source:
                        description: Source is the CloudEvents source attribute.
                        type: string
                      type:
                        description: Type refers to the CloudEvent type attribute.
                        type: string
                    type: object
                  type: array
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the "Generation" of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                sinkUri:
                  description:
                    SinkURI is the current active sink URI that has been
                    configured for the Source.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: podautoscalers.autoscaling.internal.knative.dev
spec:
  group: autoscaling.internal.knative.dev
  names:
    categories:
      - knative-internal
      - autoscaling
    kind: PodAutoscaler
    plural: podautoscalers
    shortNames:
      - kpa
      - pa
    singular: podautoscaler
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.desiredScale
          name: DesiredScale
          type: integer
        - jsonPath: .status.actualScale
          name: ActualScale
          type: integer
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description:
            "PodAutoscaler is a Knative abstraction that encapsulates the
            interface by which Knative components instantiate autoscalers.  This definition
            is an abstraction that may be backed by multiple definitions.  For more
            information, see the Knative Pluggability presentation: https://docs.google.com/presentation/d/10KWynvAJYuOEWy69VBa6bHJVCqIsz1TNdEKosNvcpPY/edit"
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description:
                Spec holds the desired state of the PodAutoscaler (from the
                client).
              properties:
                containerConcurrency:
                  description:
                    ContainerConcurrency specifies the maximum allowed in-flight
                    (concurrent) requests per container of the Revision. Defaults to
                    `0` which means unlimited concurrency.
                  format: int64
                  type: integer
                protocolType:
                  description:
                    The application-layer protocol. Matches `ProtocolType`
                    inferred from the revision spec.
                  type: string
                reachability:
                  description:
                    Reachability specifies whether or not the `ScaleTargetRef`
                    can be reached (ie. has a route). Defaults to `ReachabilityUnknown`
                  type: string
                scaleTargetRef:
                  description:
                    ScaleTargetRef defines the /scale-able resource that
                    this PodAutoscaler is responsible for quickly right-sizing.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    name:
                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: string
                  type: object
              required:
                - protocolType
                - scaleTargetRef
              type: object
            status:
              description:
                Status communicates the observed state of the PodAutoscaler
                (from the controller).
              properties:
                actualScale:
                  description:
                    ActualScale shows the actual number of replicas for the
                    revision.
                  format: int32
                  type: integer
                annotations:
                  additionalProperties:
                    type: string
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    description:
                      "Condition defines a readiness condition for a Knative
                      resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties"
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                desiredScale:
                  description:
                    DesiredScale shows the current desired number of replicas
                    for the revision.
                  format: int32
                  type: integer
                metricsServiceName:
                  description:
                    MetricsServiceName is the K8s Service name that provides
                    revision metrics. The service is managed by the PA object.
                  type: string
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                serviceName:
                  description:
                    ServiceName is the K8s Service name that serves the revision,
                    scaled by this PA. The service is created and owned by the ServerlessService
                    object owned by this PA.
                  type: string
              required:
                - metricsServiceName
                - serviceName
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: revisions.serving.knative.dev
spec:
  group: serving.knative.dev
  names:
    categories:
      - all
      - knative
      - serving
    kind: Revision
    plural: revisions
    shortNames:
      - rev
    singular: revision
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.labels['serving\.knative\.dev/configuration']
          name: Config Name
          type: string
        - jsonPath: .status.serviceName
          name: K8s Service Name
          type: string
        - jsonPath: .metadata.labels['serving\.knative\.dev/configurationGeneration']
          name: Generation
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.actualReplicas
          name: Actual Replicas
          type: integer
        - jsonPath: .status.desiredReplicas
          name: Desired Replicas
          type: integer
      name: v1
      schema:
        openAPIV3Schema:
          description:
            "Revision is an immutable snapshot of code and configuration.
            \ A revision references a container image. Revisions are created by updates
            to a Configuration. \n See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#revision"
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description:
                RevisionSpec holds the desired state of the Revision (from
                the client).
              properties:
                automountServiceAccountToken:
                  description:
                    AutomountServiceAccountToken indicates whether a service
                    account token should be automatically mounted.
                  type: boolean
                containerConcurrency:
                  description:
                    ContainerConcurrency specifies the maximum allowed in-flight
                    (concurrent) requests per container of the Revision.  Defaults to
                    `0` which means concurrency to the application is not limited, and
                    the system decides the target concurrency for the autoscaler.
                  format: int64
                  type: integer
                containers:
                  description:
                    List of containers belonging to the pod. Containers cannot
                    currently be added or removed. There must be at least one container
                    in a Pod. Cannot be updated.
                  items:
                    description:
                      A single application container that you want to run
                      within a pod.
                    properties:
                      args:
                        description:
                          'Arguments to the entrypoint. The docker image''s
                          CMD is used if this is not provided. Variable references $(VAR_NAME)
                          are expanded using the container''s environment. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. Double $$ are reduced to a single $, which allows
                          for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                          produce the string literal "$(VAR_NAME)". Escaped references
                          will never be expanded, regardless of whether the variable
                          exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      command:
                        description:
                          'Entrypoint array. Not executed within a shell.
                          The docker image''s ENTRYPOINT is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the container''s
                          environment. If a variable cannot be resolved, the reference
                          in the input string will be unchanged. Double $$ are reduced
                          to a single $, which allows for escaping the $(VAR_NAME) syntax:
                          i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                          Escaped references will never be expanded, regardless of whether
                          the variable exists or not. Cannot be updated. More info:
                          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      env:
                        description:
                          List of environment variables to set in the container.
                          Cannot be updated.
                        items:
                          description:
                            EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description:
                                Name of the environment variable. Must be
                                a C_IDENTIFIER.
                              type: string
                            value:
                              description:
                                'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in the
                                input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME)
                                syntax: i.e. "$$(VAR_NAME)" will produce the string
                                literal "$(VAR_NAME)". Escaped references will never
                                be expanded, regardless of whether the variable exists
                                or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description:
                                Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description:
                                        "Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?"
                                      type: string
                                    optional:
                                      description:
                                        Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                secretKeyRef:
                                  description:
                                    Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description:
                                        The key of the secret to select from.  Must
                                        be a valid secret key.
                                      type: string
                                    name:
                                      description:
                                        "Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?"
                                      type: string
                                    optional:
                                      description:
                                        Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - name
                          type: object
                        type: array
                      envFrom:
                        description:
                          List of sources to populate environment variables
                          in the container. The keys defined within a source must be
                          a C_IDENTIFIER. All invalid keys will be reported as an event
                          when the container is starting. When a key exists in multiple
                          sources, the value associated with the last source will take
                          precedence. Values defined by an Env with a duplicate key
                          will take precedence. Cannot be updated.
                        items:
                          description:
                            EnvFromSource represents the source of a set
                            of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  description:
                                    "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?"
                                  type: string
                                optional:
                                  description:
                                    Specify whether the ConfigMap must be
                                    defined
                                  type: boolean
                              type: object
                            prefix:
                              description:
                                An optional identifier to prepend to each
                                key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  description:
                                    "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?"
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be defined
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      image:
                        description:
                          "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                          This field is optional to allow higher level config management
                          to default or override container images in workload controllers
                          like Deployments and StatefulSets."
                        type: string
                      imagePullPolicy:
                        description:
                          "Image pull policy. One of Always, Never, IfNotPresent.
                          Defaults to Always if :latest tag is specified, or IfNotPresent
                          otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                        type: string
                      livenessProbe:
                        description:
                          "Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated. More
                          info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        properties:
                          exec:
                            description:
                              One and only one of the following should be
                              specified. Exec specifies the action to take.
                            properties:
                              command:
                                description:
                                  Command is the command line to execute
                                  inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|', etc)
                                  won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description:
                              Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description:
                                  Host name to connect to, defaults to the
                                  pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description:
                                  Custom headers to set in the request. HTTP
                                  allows repeated headers.
                                items:
                                  description:
                                    HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              scheme:
                                description:
                                  Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          initialDelaySeconds:
                            description:
                              "Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                            format: int32
                            type: integer
                          successThreshold:
                            description:
                              Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description:
                              "TCPSocket specifies an action involving a
                              TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook"
                            properties:
                              host:
                                description:
                                  "Optional: Host name to connect to, defaults
                                  to the pod IP."
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          timeoutSeconds:
                            description:
                              "Number of seconds after which the probe times
                              out. Defaults to 1 second. Minimum value is 1. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: int32
                            type: integer
                        type: object
                      name:
                        description:
                          Name of the container specified as a DNS_LABEL.
                          Each container in a pod must have a unique name (DNS_LABEL).
                          Cannot be updated.
                        type: string
                      ports:
                        description:
                          List of ports to expose from the container. Exposing
                          a port here gives the system additional information about
                          the network connections a container uses, but is primarily
                          informational. Not specifying a port here DOES NOT prevent
                          that port from being exposed. Any port which is listening
                          on the default "0.0.0.0" address inside a container will be
                          accessible from the network. Cannot be updated.
                        items:
                          description:
                            ContainerPort represents a network port in a
                            single container.
                          properties:
                            containerPort:
                              description:
                                Number of port to expose on the pod's IP
                                address. This must be a valid port number, 0 < x < 65536.
                              format: int32
                              type: integer
                            name:
                              description:
                                If specified, this must be an IANA_SVC_NAME
                                and unique within the pod. Each named port in a pod
                                must have a unique name. Name for the port that can
                                be referred to by services.
                              type: string
                            protocol:
                              default: TCP
                              description:
                                Protocol for port. Must be UDP, TCP, or SCTP.
                                Defaults to "TCP".
                              type: string
                          required:
                            - containerPort
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                        x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                        x-kubernetes-list-type: map
                      readinessProbe:
                        description:
                          "Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the probe
                          fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                        properties:
                          exec:
                            description:
                              One and only one of the following should be
                              specified. Exec specifies the action to take.
                            properties:
                              command:
                                description:
                                  Command is the command line to execute
                                  inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|', etc)
                                  won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description:
                              Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description:
                                  Host name to connect to, defaults to the
                                  pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description:
                                  Custom headers to set in the request. HTTP
                                  allows repeated headers.
                                items:
                                  description:
                                    HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              scheme:
                                description:
                                  Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          initialDelaySeconds:
                            description:
                              "Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                            format: int32
                            type: integer
                          successThreshold:
                            description:
                              Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description:
                              "TCPSocket specifies an action involving a
                              TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook"
                            properties:
                              host:
                                description:
                                  "Optional: Host name to connect to, defaults
                                  to the pod IP."
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          timeoutSeconds:
                            description:
                              "Number of seconds after which the probe times
                              out. Defaults to 1 second. Minimum value is 1. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description:
                          "Compute Resources required by this container.
                          Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                                - type: integer
                                - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description:
                              "Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                                - type: integer
                                - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description:
                              "Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. More info:
                              https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                            type: object
                        type: object
                      securityContext:
                        description:
                          "SecurityContext defines the security options the
                          container should be run with. If set, the fields of SecurityContext
                          override the equivalent fields of PodSecurityContext. More
                          info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                        properties:
                          capabilities:
                            description:
                              The capabilities to add/drop when running containers.
                              Defaults to the default set of capabilities granted by
                              the container runtime.
                            properties:
                              drop:
                                description: Removed capabilities
                                items:
                                  description:
                                    Capability represent POSIX capabilities
                                    type
                                  type: string
                                type: array
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          readOnlyRootFilesystem:
                            description:
                              Whether this container has a read-only root
                              filesystem. Default is false.
                            type: boolean
                          runAsUser:
                            description:
                              The UID to run the entrypoint of the container
                              process. Defaults to user specified in image metadata
                              if unspecified. May also be set in PodSecurityContext.  If
                              set in both SecurityContext and PodSecurityContext, the
                              value specified in SecurityContext takes precedence.
                            format: int64
                            type: integer
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      terminationMessagePath:
                        description:
                          "Optional: Path at which the file to which the
                          container's termination message will be written is mounted
                          into the container's filesystem. Message written is intended
                          to be brief final status, such as an assertion failure message.
                          Will be truncated by the node if greater than 4096 bytes.
                          The total message length across all containers will be limited
                          to 12kb. Defaults to /dev/termination-log. Cannot be updated."
                        type: string
                      terminationMessagePolicy:
                        description:
                          Indicate how the termination message should be
                          populated. File will use the contents of terminationMessagePath
                          to populate the container status message on both success and
                          failure. FallbackToLogsOnError will use the last chunk of
                          container log output if the termination message file is empty
                          and the container exited with an error. The log output is
                          limited to 2048 bytes or 80 lines, whichever is smaller. Defaults
                          to File. Cannot be updated.
                        type: string
                      volumeMounts:
                        description:
                          Pod volumes to mount into the container's filesystem.
                          Cannot be updated.
                        items:
                          description:
                            VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description:
                                Path within the container at which the volume
                                should be mounted.  Must not contain ':'.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description:
                                Mounted read-only if true, read-write otherwise
                                (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description:
                                Path within the volume from which the container's
                                volume should be mounted. Defaults to "" (volume's root).
                              type: string
                          required:
                            - mountPath
                            - name
                          type: object
                        type: array
                      workingDir:
                        description:
                          Container's working directory. If not specified,
                          the container runtime's default will be used, which might
                          be configured in the container image. Cannot be updated.
                        type: string
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                enableServiceLinks:
                  description:
                    "EnableServiceLinks indicates whether information about
                    services should be injected into pod's environment variables, matching
                    the syntax of Docker links. Optional: Defaults to true."
                  type: boolean
                imagePullSecrets:
                  description:
                    "ImagePullSecrets is an optional list of references to
                    secrets in the same namespace to use for pulling any of the images
                    used by this PodSpec. If specified, these secrets will be passed
                    to individual puller implementations for them to use. For example,
                    in the case of docker, only DockerConfig type secrets are honored.
                    More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
                  items:
                    description:
                      LocalObjectReference contains enough information to
                      let you locate the referenced object inside the same namespace.
                    properties:
                      name:
                        description:
                          "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?"
                        type: string
                    type: object
                  type: array
                serviceAccountName:
                  description:
                    "ServiceAccountName is the name of the ServiceAccount
                    to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
                  type: string
                timeoutSeconds:
                  description:
                    TimeoutSeconds is the maximum duration in seconds that
                    the request routing layer will wait for a request delivered to a
                    container to begin replying (send network traffic). If unspecified,
                    a system default will be provided.
                  format: int64
                  type: integer
                volumes:
                  description:
                    "List of volumes that can be mounted by containers belonging
                    to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes"
                  items:
                    description:
                      Volume represents a named volume in a pod that may
                      be accessed by any container in the pod.
                    properties:
                      configMap:
                        description:
                          ConfigMap represents a configMap that should populate
                          this volume
                        properties:
                          defaultMode:
                            description:
                              "Optional: mode bits used to set permissions
                              on created files by default. Must be an octal value between
                              0000 and 0777 or a decimal value between 0 and 511. YAML
                              accepts both octal and decimal values, JSON requires decimal
                              values for mode bits. Defaults to 0644. Directories within
                              the path are not affected by this setting. This might
                              be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits
                              set."
                            format: int32
                            type: integer
                          items:
                            description:
                              If unspecified, each key-value pair in the
                              Data field of the referenced ConfigMap will be projected
                              into the volume as a file whose name is the key and content
                              is the value. If specified, the listed keys will be projected
                              into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in
                              the ConfigMap, the volume setup will error unless it is
                              marked optional. Paths must be relative and may not contain
                              the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description:
                                    "Optional: mode bits used to set permissions
                                    on this file. Must be an octal value between 0000
                                    and 0777 or a decimal value between 0 and 511. YAML
                                    accepts both octal and decimal values, JSON requires
                                    decimal values for mode bits. If not specified,
                                    the volume defaultMode will be used. This might
                                    be in conflict with other options that affect the
                                    file mode, like fsGroup, and the result can be other
                                    mode bits set."
                                  format: int32
                                  type: integer
                                path:
                                  description:
                                    The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                                - key
                                - path
                              type: object
                            type: array
                          name:
                            description:
                              "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?"
                            type: string
                          optional:
                            description:
                              Specify whether the ConfigMap or its keys must
                              be defined
                            type: boolean
                        type: object
                      name:
                        description:
                          "Volume's name. Must be a DNS_LABEL and unique
                          within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                        type: string
                      projected:
                        description:
                          Items for all in one resources secrets, configmaps,
                          and downward API
                        properties:
                          defaultMode:
                            description:
                              Mode bits used to set permissions on created
                              files by default. Must be an octal value between 0000
                              and 0777 or a decimal value between 0 and 511. YAML accepts
                              both octal and decimal values, JSON requires decimal values
                              for mode bits. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and the
                              result can be other mode bits set.
                            format: int32
                            type: integer
                          sources:
                            description: list of volume projections
                            items:
                              description:
                                Projection that may be projected along with
                                other supported volume types
                              properties:
                                configMap:
                                  description:
                                    information about the configMap data
                                    to project
                                  properties:
                                    items:
                                      description:
                                        If unspecified, each key-value pair
                                        in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified which
                                        is not present in the ConfigMap, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain the
                                        '..' path or start with '..'.
                                      items:
                                        description:
                                          Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description:
                                              "Optional: mode bits used to
                                              set permissions on this file. Must be
                                              an octal value between 0000 and 0777 or
                                              a decimal value between 0 and 511. YAML
                                              accepts both octal and decimal values,
                                              JSON requires decimal values for mode
                                              bits. If not specified, the volume defaultMode
                                              will be used. This might be in conflict
                                              with other options that affect the file
                                              mode, like fsGroup, and the result can
                                              be other mode bits set."
                                            format: int32
                                            type: integer
                                          path:
                                            description:
                                              The relative path of the file
                                              to map the key to. May not be an absolute
                                              path. May not contain the path element
                                              '..'. May not start with the string '..'.
                                            type: string
                                        required:
                                          - key
                                          - path
                                        type: object
                                      type: array
                                    name:
                                      description:
                                        "Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?"
                                      type: string
                                    optional:
                                      description:
                                        Specify whether the ConfigMap or
                                        its keys must be defined
                                      type: boolean
                                  type: object
                                secret:
                                  description:
                                    information about the secret data to
                                    project
                                  properties:
                                    items:
                                      description:
                                        If unspecified, each key-value pair
                                        in the Data field of the referenced Secret will
                                        be projected into the volume as a file whose
                                        name is the key and content is the value. If
                                        specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified which
                                        is not present in the Secret, the volume setup
                                        will error unless it is marked optional. Paths
                                        must be relative and may not contain the '..'
                                        path or start with '..'.
                                      items:
                                        description:
                                          Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: The key to project.
                                            type: string
                                          mode:
                                            description:
                                              "Optional: mode bits used to
                                              set permissions on this file. Must be
                                              an octal value between 0000 and 0777 or
                                              a decimal value between 0 and 511. YAML
                                              accepts both octal and decimal values,
                                              JSON requires decimal values for mode
                                              bits. If not specified, the volume defaultMode
                                              will be used. This might be in conflict
                                              with other options that affect the file
                                              mode, like fsGroup, and the result can
                                              be other mode bits set."
                                            format: int32
                                            type: integer
                                          path:
                                            description:
                                              The relative path of the file
                                              to map the key to. May not be an absolute
                                              path. May not contain the path element
                                              '..'. May not start with the string '..'.
                                            type: string
                                        required:
                                          - key
                                          - path
                                        type: object
                                      type: array
                                    name:
                                      description:
                                        "Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion, kind,
                                        uid?"
                                      type: string
                                    optional:
                                      description:
                                        Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  type: object
                                serviceAccountToken:
                                  description:
                                    information about the serviceAccountToken
                                    data to project
                                  properties:
                                    audience:
                                      description:
                                        Audience is the intended audience
                                        of the token. A recipient of a token must identify
                                        itself with an identifier specified in the audience
                                        of the token, and otherwise should reject the
                                        token. The audience defaults to the identifier
                                        of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description:
                                        ExpirationSeconds is the requested
                                        duration of validity of the service account
                                        token. As the token approaches expiration, the
                                        kubelet volume plugin will proactively rotate
                                        the service account token. The kubelet will
                                        start trying to rotate the token if the token
                                        is older than 80 percent of its time to live
                                        or if the token is older than 24 hours.Defaults
                                        to 1 hour and must be at least 10 minutes.
                                      format: int64
                                      type: integer
                                    path:
                                      description:
                                        Path is the path relative to the
                                        mount point of the file to project the token
                                        into.
                                      type: string
                                  required:
                                    - path
                                  type: object
                              type: object
                            type: array
                        type: object
                      secret:
                        description:
                          "Secret represents a secret that should populate
                          this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                        properties:
                          defaultMode:
                            description:
                              "Optional: mode bits used to set permissions
                              on created files by default. Must be an octal value between
                              0000 and 0777 or a decimal value between 0 and 511. YAML
                              accepts both octal and decimal values, JSON requires decimal
                              values for mode bits. Defaults to 0644. Directories within
                              the path are not affected by this setting. This might
                              be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits
                              set."
                            format: int32
                            type: integer
                          items:
                            description:
                              If unspecified, each key-value pair in the
                              Data field of the referenced Secret will be projected
                              into the volume as a file whose name is the key and content
                              is the value. If specified, the listed keys will be projected
                              into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in
                              the Secret, the volume setup will error unless it is marked
                              optional. Paths must be relative and may not contain the
                              '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description:
                                    "Optional: mode bits used to set permissions
                                    on this file. Must be an octal value between 0000
                                    and 0777 or a decimal value between 0 and 511. YAML
                                    accepts both octal and decimal values, JSON requires
                                    decimal values for mode bits. If not specified,
                                    the volume defaultMode will be used. This might
                                    be in conflict with other options that affect the
                                    file mode, like fsGroup, and the result can be other
                                    mode bits set."
                                  format: int32
                                  type: integer
                                path:
                                  description:
                                    The relative path of the file to map
                                    the key to. May not be an absolute path. May not
                                    contain the path element '..'. May not start with
                                    the string '..'.
                                  type: string
                              required:
                                - key
                                - path
                              type: object
                            type: array
                          optional:
                            description:
                              Specify whether the Secret or its keys must
                              be defined
                            type: boolean
                          secretName:
                            description:
                              "Name of the secret in the pod's namespace
                              to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                            type: string
                        type: object
                    required:
                      - name
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
              required:
                - containers
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              description:
                RevisionStatus communicates the observed state of the Revision
                (from the controller).
              properties:
                actualReplicas:
                  description:
                    ActualReplicas reflects the amount of ready pods running
                    this revision.
                  format: int32
                  type: integer
                annotations:
                  additionalProperties:
                    type: string
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    description:
                      "Condition defines a readiness condition for a Knative
                      resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties"
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                containerStatuses:
                  description:
                    "ContainerStatuses is a slice of images present in .Spec.Container[*].Image
                    to their respective digests and their container name. The digests
                    are resolved during the creation of Revision. ContainerStatuses
                    holds the container name and image digests for both serving and
                    non serving containers. ref: http://bit.ly/image-digests"
                  items:
                    description:
                      ContainerStatus holds the information of container
                      name and image digest value
                    properties:
                      imageDigest:
                        type: string
                      name:
                        type: string
                    type: object
                  type: array
                desiredReplicas:
                  description:
                    DesiredReplicas reflects the desired amount of pods running
                    this revision.
                  format: int32
                  type: integer
                initContainerStatuses:
                  description:
                    "InitContainerStatuses is a slice of images present in
                    .Spec.InitContainer[*].Image to their respective digests and their
                    container name. The digests are resolved during the creation of
                    Revision. ContainerStatuses holds the container name and image digests
                    for both serving and non serving containers. ref: http://bit.ly/image-digests"
                  items:
                    description:
                      ContainerStatus holds the information of container
                      name and image digest value
                    properties:
                      imageDigest:
                        type: string
                      name:
                        type: string
                    type: object
                  type: array
                logUrl:
                  description:
                    LogURL specifies the generated logging url for this particular
                    revision based on the revision url template specified in the controller's
                    config.
                  type: string
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    duck.knative.dev/addressable: "true"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: routes.serving.knative.dev
spec:
  group: serving.knative.dev
  names:
    categories:
      - all
      - knative
      - serving
    kind: Route
    plural: routes
    shortNames:
      - rt
    singular: route
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            'Route is responsible for configuring ingress over a collection
            of Revisions. Some of the Revisions a Route distributes traffic over may
            be specified by referencing the Configuration responsible for creating them;
            in these cases the Route is additionally responsible for monitoring the
            Configuration for "latest ready revision" changes, and smoothly rolling
            out latest revisions. See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#route'
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds the desired state of the Route (from the client).
              properties:
                traffic:
                  description:
                    Traffic specifies how to distribute traffic over a collection
                    of revisions and configurations.
                  items:
                    description:
                      TrafficTarget holds a single entry of the routing table
                      for a Route.
                    properties:
                      configurationName:
                        description:
                          ConfigurationName of a configuration to whose latest
                          revision we will send this portion of traffic. When the "status.latestReadyRevisionName"
                          of the referenced configuration changes, we will automatically
                          migrate traffic from the prior "latest ready" revision to
                          the new one.  This field is never set in Route's status, only
                          its spec.  This is mutually exclusive with RevisionName.
                        type: string
                      latestRevision:
                        description:
                          LatestRevision may be optionally provided to indicate
                          that the latest ready Revision of the Configuration should
                          be used for this traffic target.  When provided LatestRevision
                          must be true if RevisionName is empty; it must be false when
                          RevisionName is non-empty.
                        type: boolean
                      percent:
                        description:
                          "Percent indicates that percentage based routing
                          should be used and the value indicates the percent of traffic
                          that is be routed to this Revision or Configuration. `0` (zero)
                          mean no traffic, `100` means all traffic. When percentage
                          based routing is being used the follow rules apply: - the
                          sum of all percent values must equal 100 - when not specified,
                          the implied value for `percent` is zero for   that particular
                          Revision or Configuration"
                        format: int64
                        type: integer
                      revisionName:
                        description:
                          RevisionName of a specific revision to which to
                          send this portion of traffic.  This is mutually exclusive
                          with ConfigurationName.
                        type: string
                      tag:
                        description:
                          Tag is optionally used to expose a dedicated url
                          for referencing this target exclusively.
                        type: string
                      url:
                        description:
                          URL displays the URL for accessing named traffic
                          targets. URL is displayed in status, and is disallowed on
                          spec. URL must contain a scheme (e.g. http://) and a hostname,
                          but may not contain anything else (e.g. basic auth, url path,
                          etc.)
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description:
                Status communicates the observed state of the Route (from
                the controller).
              properties:
                address:
                  description:
                    Address holds the information needed for a Route to be
                    the target of an event.
                  properties:
                    url:
                      type: string
                  type: object
                annotations:
                  additionalProperties:
                    type: string
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    description:
                      "Condition defines a readiness condition for a Knative
                      resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties"
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                traffic:
                  description:
                    Traffic holds the configured traffic distribution. These
                    entries will always contain RevisionName references. When ConfigurationName
                    appears in the spec, this will hold the LatestReadyRevisionName
                    that we last observed.
                  items:
                    description:
                      TrafficTarget holds a single entry of the routing table
                      for a Route.
                    properties:
                      configurationName:
                        description:
                          ConfigurationName of a configuration to whose latest
                          revision we will send this portion of traffic. When the "status.latestReadyRevisionName"
                          of the referenced configuration changes, we will automatically
                          migrate traffic from the prior "latest ready" revision to
                          the new one.  This field is never set in Route's status, only
                          its spec.  This is mutually exclusive with RevisionName.
                        type: string
                      latestRevision:
                        description:
                          LatestRevision may be optionally provided to indicate
                          that the latest ready Revision of the Configuration should
                          be used for this traffic target.  When provided LatestRevision
                          must be true if RevisionName is empty; it must be false when
                          RevisionName is non-empty.
                        type: boolean
                      percent:
                        description:
                          "Percent indicates that percentage based routing
                          should be used and the value indicates the percent of traffic
                          that is be routed to this Revision or Configuration. `0` (zero)
                          mean no traffic, `100` means all traffic. When percentage
                          based routing is being used the follow rules apply: - the
                          sum of all percent values must equal 100 - when not specified,
                          the implied value for `percent` is zero for   that particular
                          Revision or Configuration"
                        format: int64
                        type: integer
                      revisionName:
                        description:
                          RevisionName of a specific revision to which to
                          send this portion of traffic.  This is mutually exclusive
                          with ConfigurationName.
                        type: string
                      tag:
                        description:
                          Tag is optionally used to expose a dedicated url
                          for referencing this target exclusively.
                        type: string
                      url:
                        description:
                          URL displays the URL for accessing named traffic
                          targets. URL is displayed in status, and is disallowed on
                          spec. URL must contain a scheme (e.g. http://) and a hostname,
                          but may not contain anything else (e.g. basic auth, url path,
                          etc.)
                        type: string
                    type: object
                  type: array
                url:
                  description:
                    URL holds the url that will distribute traffic over the
                    provided traffic targets. It generally has the form http[s]://{route-name}.{route-namespace}.{cluster-level-suffix}
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: v1.2.4
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: sequences.flows.knative.dev
spec:
  group: flows.knative.dev
  names:
    categories:
      - all
      - knative
      - flows
    kind: Sequence
    plural: sequences
    singular: sequence
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.address.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            Sequence defines a sequence of Subscribers that will be wired
            in series through Channels and Subscriptions.
          properties:
            spec:
              description: Spec defines the desired state of the Sequence.
              properties:
                channelTemplate:
                  description:
                    ChannelTemplate specifies which Channel CRD to use. If
                    left unspecified, it is set to the default Channel CRD for the namespace
                    (or cluster, in case there are no defaults for the namespace).
                  properties:
                    apiVersion:
                      description:
                        "APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
                      type: string
                    kind:
                      description:
                        "Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    spec:
                      description:
                        Spec defines the Spec to use for each channel created.
                        Passed in verbatim to the Channel CRD as Spec section.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                reply:
                  description:
                    Reply is a Reference to where the result of the last
                    Subscriber gets sent to.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
                steps:
                  description:
                    Steps is the list of Destinations (processors / functions)
                    that will be called in the order provided. Each step has its own
                    delivery options
                  items:
                    properties:
                      delivery:
                        description:
                          Delivery is the delivery specification for events
                          to the subscriber This includes things like retries, DLQ,
                          etc.
                        properties:
                          backoffDelay:
                            description:
                              "BackoffDelay is the delay before retrying.
                              More information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html
                              - https://en.wikipedia.org/wiki/ISO_8601  For linear policy,
                              backoff delay is backoffDelay*<numberOfRetries>. For exponential
                              policy, backoff delay is backoffDelay*2^<numberOfRetries>."
                            type: string
                          backoffPolicy:
                            description:
                              BackoffPolicy is the retry backoff policy (linear,
                              exponential).
                            type: string
                          deadLetterSink:
                            description:
                              DeadLetterSink is the sink receiving event
                              that could not be sent to a destination.
                            properties:
                              ref:
                                description: Ref points to an Addressable.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  kind:
                                    description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                                    type: string
                                  name:
                                    description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                    type: string
                                  namespace:
                                    description:
                                      "Namespace of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      This is optional field, it gets defaulted to the
                                      object holding it if left out."
                                    type: string
                                type: object
                              uri:
                                description:
                                  URI can be an absolute URL(non-empty scheme
                                  and non-empty host) pointing to the target or a relative
                                  URI. Relative URIs will be resolved using the base
                                  URI retrieved from Ref.
                                type: string
                            type: object
                          retry:
                            description:
                              Retry is the minimum number of retries the
                              sender should attempt when sending an event before moving
                              it to the dead letter sink.
                            format: int32
                            type: integer
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      ref:
                        description: Ref points to an Addressable.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          kind:
                            description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                            type: string
                          name:
                            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                            type: string
                          namespace:
                            description:
                              "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              This is optional field, it gets defaulted to the object
                              holding it if left out."
                            type: string
                        type: object
                      uri:
                        description:
                          URI can be an absolute URL(non-empty scheme and
                          non-empty host) pointing to the target or a relative URI.
                          Relative URIs will be resolved using the base URI retrieved
                          from Ref.
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description:
                Status represents the current state of the Sequence. This
                data may be out of date.
              properties:
                address:
                  properties:
                    url:
                      type: string
                  type: object
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                channelStatuses:
                  description:
                    ChannelStatuses is an array of corresponding Channel
                    statuses. Matches the Spec.Steps array in the order.
                  items:
                    properties:
                      channel:
                        description: Channel is the reference to the underlying channel.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description:
                              'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object.'
                            type: string
                          kind:
                            description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                            type: string
                          name:
                            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                            type: string
                          namespace:
                            description: "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                            type: string
                          resourceVersion:
                            description:
                              "Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                            type: string
                          uid:
                            description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                            type: string
                        type: object
                      ready:
                        description:
                          ReadyCondition indicates whether the Channel is
                          ready or not.
                        properties:
                          lastTransitionTime:
                            description:
                              LastTransitionTime is the last time the condition
                              transitioned from one status to another. We use VolatileTime
                              in place of metav1.Time to exclude this from creating
                              equality.Semantic differences (all other things held constant).
                            type: string
                          message:
                            description:
                              A human readable message indicating details
                              about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          severity:
                            description:
                              Severity with which to treat failures of this
                              type of condition. When this is not specified, it defaults
                              to Error.
                            type: string
                          status:
                            description:
                              Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of condition.
                            type: string
                        required:
                          - type
                          - status
                        type: object
                    type: object
                  type: array
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                subscriptionStatuses:
                  description:
                    SubscriptionStatuses is an array of corresponding Subscription
                    statuses. Matches the Spec.Steps array in the order.
                  items:
                    properties:
                      ready:
                        description:
                          ReadyCondition indicates whether the Subscription
                          is ready or not.
                        properties:
                          lastTransitionTime:
                            description:
                              LastTransitionTime is the last time the condition
                              transitioned from one status to another. We use VolatileTime
                              in place of metav1.Time to exclude this from creating
                              equality.Semantic differences (all other things held constant).
                            type: string
                          message:
                            description:
                              A human readable message indicating details
                              about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          severity:
                            description:
                              Severity with which to treat failures of this
                              type of condition. When this is not specified, it defaults
                              to Error.
                            type: string
                          status:
                            description:
                              Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of condition.
                            type: string
                        required:
                          - type
                          - status
                        type: object
                      subscription:
                        description:
                          Subscription is the reference to the underlying
                          Subscription.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description:
                              'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this pod).
                              This syntax is chosen only to have some well-defined way
                              of referencing a part of an object.'
                            type: string
                          kind:
                            description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                            type: string
                          name:
                            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                            type: string
                          namespace:
                            description: "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                            type: string
                          resourceVersion:
                            description:
                              "Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                            type: string
                          uid:
                            description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: serverlessservices.networking.internal.knative.dev
spec:
  group: networking.internal.knative.dev
  names:
    categories:
      - knative-internal
      - networking
    kind: ServerlessService
    plural: serverlessservices
    shortNames:
      - sks
    singular: serverlessservice
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.mode
          name: Mode
          type: string
        - jsonPath: .spec.numActivators
          name: Activators
          type: integer
        - jsonPath: .status.serviceName
          name: ServiceName
          type: string
        - jsonPath: .status.privateServiceName
          name: PrivateServiceName
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    duck.knative.dev/addressable: "true"
    duck.knative.dev/podspecable: "true"
    knative.dev/crd-install: "true"
    serving.knative.dev/release: v1.2.5
  name: services.serving.knative.dev
spec:
  group: serving.knative.dev
  names:
    categories:
      - all
      - knative
      - serving
    kind: Service
    plural: services
    shortNames:
      - kservice
      - ksvc
    singular: service
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.url
          name: URL
          type: string
        - jsonPath: .status.latestCreatedRevisionName
          name: LatestCreated
          type: string
        - jsonPath: .status.latestReadyRevisionName
          name: LatestReady
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            "Service acts as a top-level container that manages a Route and
            Configuration which implement a network service. Service exists to provide
            a singular abstraction which can be access controlled, reasoned about, and
            which encapsulates software lifecycle decisions such as rollout policy and
            team resource ownership. Service acts only as an orchestrator of the underlying
            Routes and Configurations (much as a kubernetes Deployment orchestrates
            ReplicaSets), and its usage is optional but recommended. \n The Service's
            controller will track the statuses of its owned Configuration and Route,
            reflecting their statuses and conditions as its own. \n See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#service"
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description:
                ServiceSpec represents the configuration for the Service
                object. A Service's specification is the union of the specifications
                for a Route and Configuration.  The Service restricts what can be expressed
                in these fields, e.g. the Route must reference the provided Configuration;
                however, these limitations also enable friendlier defaulting, e.g. Route
                never needs a Configuration name, and may be defaulted to the appropriate
                "run latest" spec.
              properties:
                template:
                  description:
                    Template holds the latest specification for the Revision
                    to be stamped out.
                  properties:
                    metadata:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        finalizers:
                          items:
                            type: string
                          type: array
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    spec:
                      description:
                        RevisionSpec holds the desired state of the Revision
                        (from the client).
                      properties:
                        automountServiceAccountToken:
                          description:
                            AutomountServiceAccountToken indicates whether
                            a service account token should be automatically mounted.
                          type: boolean
                        containerConcurrency:
                          description:
                            ContainerConcurrency specifies the maximum allowed
                            in-flight (concurrent) requests per container of the Revision.  Defaults
                            to `0` which means concurrency to the application is not
                            limited, and the system decides the target concurrency for
                            the autoscaler.
                          format: int64
                          type: integer
                        containers:
                          description:
                            List of containers belonging to the pod. Containers
                            cannot currently be added or removed. There must be at least
                            one container in a Pod. Cannot be updated.
                          items:
                            description:
                              A single application container that you want
                              to run within a pod.
                            properties:
                              args:
                                description:
                                  'Arguments to the entrypoint. The docker
                                  image''s CMD is used if this is not provided. Variable
                                  references $(VAR_NAME) are expanded using the container''s
                                  environment. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged. Double
                                  $$ are reduced to a single $, which allows for escaping
                                  the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                  the string literal "$(VAR_NAME)". Escaped references
                                  will never be expanded, regardless of whether the
                                  variable exists or not. Cannot be updated. More info:
                                  https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                items:
                                  type: string
                                type: array
                              command:
                                description:
                                  'Entrypoint array. Not executed within
                                  a shell. The docker image''s ENTRYPOINT is used if
                                  this is not provided. Variable references $(VAR_NAME)
                                  are expanded using the container''s environment. If
                                  a variable cannot be resolved, the reference in the
                                  input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME)
                                  syntax: i.e. "$$(VAR_NAME)" will produce the string
                                  literal "$(VAR_NAME)". Escaped references will never
                                  be expanded, regardless of whether the variable exists
                                  or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                items:
                                  type: string
                                type: array
                              env:
                                description:
                                  List of environment variables to set in
                                  the container. Cannot be updated.
                                items:
                                  description:
                                    EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description:
                                        Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description:
                                        'Variable references $(VAR_NAME)
                                        are expanded using the previously defined environment
                                        variables in the container and any service environment
                                        variables. If a variable cannot be resolved,
                                        the reference in the input string will be unchanged.
                                        Double $$ are reduced to a single $, which allows
                                        for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                        will produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded, regardless
                                        of whether the variable exists or not. Defaults
                                        to "".'
                                      type: string
                                    valueFrom:
                                      description:
                                        Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description:
                                                "Name of the referent. More
                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?"
                                              type: string
                                            optional:
                                              description:
                                                Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                            - key
                                          type: object
                                        secretKeyRef:
                                          description:
                                            Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description:
                                                The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description:
                                                "Name of the referent. More
                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?"
                                              type: string
                                            optional:
                                              description:
                                                Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                            - key
                                          type: object
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  required:
                                    - name
                                  type: object
                                type: array
                              envFrom:
                                description:
                                  List of sources to populate environment
                                  variables in the container. The keys defined within
                                  a source must be a C_IDENTIFIER. All invalid keys
                                  will be reported as an event when the container is
                                  starting. When a key exists in multiple sources, the
                                  value associated with the last source will take precedence.
                                  Values defined by an Env with a duplicate key will
                                  take precedence. Cannot be updated.
                                items:
                                  description:
                                    EnvFromSource represents the source of
                                    a set of ConfigMaps
                                  properties:
                                    configMapRef:
                                      description: The ConfigMap to select from
                                      properties:
                                        name:
                                          description:
                                            "Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?"
                                          type: string
                                        optional:
                                          description:
                                            Specify whether the ConfigMap
                                            must be defined
                                          type: boolean
                                      type: object
                                    prefix:
                                      description:
                                        An optional identifier to prepend
                                        to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                      type: string
                                    secretRef:
                                      description: The Secret to select from
                                      properties:
                                        name:
                                          description:
                                            "Name of the referent. More info:
                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?"
                                          type: string
                                        optional:
                                          description:
                                            Specify whether the Secret must
                                            be defined
                                          type: boolean
                                      type: object
                                  type: object
                                type: array
                              image:
                                description:
                                  "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                  This field is optional to allow higher level config
                                  management to default or override container images
                                  in workload controllers like Deployments and StatefulSets."
                                type: string
                              imagePullPolicy:
                                description:
                                  "Image pull policy. One of Always, Never,
                                  IfNotPresent. Defaults to Always if :latest tag is
                                  specified, or IfNotPresent otherwise. Cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
                                type: string
                              livenessProbe:
                                description:
                                  "Periodic probe of container liveness.
                                  Container will be restarted if the probe fails. Cannot
                                  be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                properties:
                                  exec:
                                    description:
                                      One and only one of the following should
                                      be specified. Exec specifies the action to take.
                                    properties:
                                      command:
                                        description:
                                          Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/') in
                                          the container's filesystem. The command is
                                          simply exec'd, it is not run inside a shell,
                                          so traditional shell instructions ('|', etc)
                                          won't work. To use a shell, you need to explicitly
                                          call out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description:
                                      Minimum consecutive failures for the
                                      probe to be considered failed after having succeeded.
                                      Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  httpGet:
                                    description:
                                      HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description:
                                          Host name to connect to, defaults
                                          to the pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description:
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        items:
                                          description:
                                            HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      scheme:
                                        description:
                                          Scheme to use for connecting to
                                          the host. Defaults to HTTP.
                                        type: string
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  initialDelaySeconds:
                                    description:
                                      "Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description:
                                      How often (in seconds) to perform the
                                      probe.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description:
                                      Minimum consecutive successes for the
                                      probe to be considered successful after having
                                      failed. Defaults to 1. Must be 1 for liveness
                                      and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description:
                                      "TCPSocket specifies an action involving
                                      a TCP port. TCP hooks not yet supported TODO:
                                      implement a realistic TCP lifecycle hook"
                                    properties:
                                      host:
                                        description:
                                          "Optional: Host name to connect
                                          to, defaults to the pod IP."
                                        type: string
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  timeoutSeconds:
                                    description:
                                      "Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                    format: int32
                                    type: integer
                                type: object
                              name:
                                description:
                                  Name of the container specified as a DNS_LABEL.
                                  Each container in a pod must have a unique name (DNS_LABEL).
                                  Cannot be updated.
                                type: string
                              ports:
                                description:
                                  List of ports to expose from the container.
                                  Exposing a port here gives the system additional information
                                  about the network connections a container uses, but
                                  is primarily informational. Not specifying a port
                                  here DOES NOT prevent that port from being exposed.
                                  Any port which is listening on the default "0.0.0.0"
                                  address inside a container will be accessible from
                                  the network. Cannot be updated.
                                items:
                                  description:
                                    ContainerPort represents a network port
                                    in a single container.
                                  properties:
                                    containerPort:
                                      description:
                                        Number of port to expose on the pod's
                                        IP address. This must be a valid port number,
                                        0 < x < 65536.
                                      format: int32
                                      type: integer
                                    name:
                                      description:
                                        If specified, this must be an IANA_SVC_NAME
                                        and unique within the pod. Each named port in
                                        a pod must have a unique name. Name for the
                                        port that can be referred to by services.
                                      type: string
                                    protocol:
                                      default: TCP
                                      description:
                                        Protocol for port. Must be UDP, TCP,
                                        or SCTP. Defaults to "TCP".
                                      type: string
                                  required:
                                    - containerPort
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                                x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                x-kubernetes-list-type: map
                              readinessProbe:
                                description:
                                  "Periodic probe of container service readiness.
                                  Container will be removed from service endpoints if
                                  the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                properties:
                                  exec:
                                    description:
                                      One and only one of the following should
                                      be specified. Exec specifies the action to take.
                                    properties:
                                      command:
                                        description:
                                          Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/') in
                                          the container's filesystem. The command is
                                          simply exec'd, it is not run inside a shell,
                                          so traditional shell instructions ('|', etc)
                                          won't work. To use a shell, you need to explicitly
                                          call out to that shell. Exit status of 0 is
                                          treated as live/healthy and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  failureThreshold:
                                    description:
                                      Minimum consecutive failures for the
                                      probe to be considered failed after having succeeded.
                                      Defaults to 3. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  httpGet:
                                    description:
                                      HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description:
                                          Host name to connect to, defaults
                                          to the pod IP. You probably want to set "Host"
                                          in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description:
                                          Custom headers to set in the request.
                                          HTTP allows repeated headers.
                                        items:
                                          description:
                                            HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      scheme:
                                        description:
                                          Scheme to use for connecting to
                                          the host. Defaults to HTTP.
                                        type: string
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  initialDelaySeconds:
                                    description:
                                      "Number of seconds after the container
                                      has started before liveness probes are initiated.
                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                    format: int32
                                    type: integer
                                  periodSeconds:
                                    description:
                                      How often (in seconds) to perform the
                                      probe.
                                    format: int32
                                    type: integer
                                  successThreshold:
                                    description:
                                      Minimum consecutive successes for the
                                      probe to be considered successful after having
                                      failed. Defaults to 1. Must be 1 for liveness
                                      and startup. Minimum value is 1.
                                    format: int32
                                    type: integer
                                  tcpSocket:
                                    description:
                                      "TCPSocket specifies an action involving
                                      a TCP port. TCP hooks not yet supported TODO:
                                      implement a realistic TCP lifecycle hook"
                                    properties:
                                      host:
                                        description:
                                          "Optional: Host name to connect
                                          to, defaults to the pod IP."
                                        type: string
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  timeoutSeconds:
                                    description:
                                      "Number of seconds after which the
                                      probe times out. Defaults to 1 second. Minimum
                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                                    format: int32
                                    type: integer
                                type: object
                              resources:
                                description:
                                  "Compute Resources required by this container.
                                  Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description:
                                      "Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description:
                                      "Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
                                    type: object
                                type: object
                              securityContext:
                                description:
                                  "SecurityContext defines the security options
                                  the container should be run with. If set, the fields
                                  of SecurityContext override the equivalent fields
                                  of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
                                properties:
                                  capabilities:
                                    description:
                                      The capabilities to add/drop when running
                                      containers. Defaults to the default set of capabilities
                                      granted by the container runtime.
                                    properties:
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description:
                                            Capability represent POSIX capabilities
                                            type
                                          type: string
                                        type: array
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  readOnlyRootFilesystem:
                                    description:
                                      Whether this container has a read-only
                                      root filesystem. Default is false.
                                    type: boolean
                                  runAsUser:
                                    description:
                                      The UID to run the entrypoint of the
                                      container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified in
                                      SecurityContext takes precedence.
                                    format: int64
                                    type: integer
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              terminationMessagePath:
                                description:
                                  "Optional: Path at which the file to which
                                  the container's termination message will be written
                                  is mounted into the container's filesystem. Message
                                  written is intended to be brief final status, such
                                  as an assertion failure message. Will be truncated
                                  by the node if greater than 4096 bytes. The total
                                  message length across all containers will be limited
                                  to 12kb. Defaults to /dev/termination-log. Cannot
                                  be updated."
                                type: string
                              terminationMessagePolicy:
                                description:
                                  Indicate how the termination message should
                                  be populated. File will use the contents of terminationMessagePath
                                  to populate the container status message on both success
                                  and failure. FallbackToLogsOnError will use the last
                                  chunk of container log output if the termination message
                                  file is empty and the container exited with an error.
                                  The log output is limited to 2048 bytes or 80 lines,
                                  whichever is smaller. Defaults to File. Cannot be
                                  updated.
                                type: string
                              volumeMounts:
                                description:
                                  Pod volumes to mount into the container's
                                  filesystem. Cannot be updated.
                                items:
                                  description:
                                    VolumeMount describes a mounting of a
                                    Volume within a container.
                                  properties:
                                    mountPath:
                                      description:
                                        Path within the container at which
                                        the volume should be mounted.  Must not contain
                                        ':'.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description:
                                        Mounted read-only if true, read-write
                                        otherwise (false or unspecified). Defaults to
                                        false.
                                      type: boolean
                                    subPath:
                                      description:
                                        Path within the volume from which
                                        the container's volume should be mounted. Defaults
                                        to "" (volume's root).
                                      type: string
                                  required:
                                    - mountPath
                                    - name
                                  type: object
                                type: array
                              workingDir:
                                description:
                                  Container's working directory. If not specified,
                                  the container runtime's default will be used, which
                                  might be configured in the container image. Cannot
                                  be updated.
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                        enableServiceLinks:
                          description:
                            "EnableServiceLinks indicates whether information
                            about services should be injected into pod's environment
                            variables, matching the syntax of Docker links. Optional:
                            Defaults to true."
                          type: boolean
                        imagePullSecrets:
                          description:
                            "ImagePullSecrets is an optional list of references
                            to secrets in the same namespace to use for pulling any
                            of the images used by this PodSpec. If specified, these
                            secrets will be passed to individual puller implementations
                            for them to use. For example, in the case of docker, only
                            DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
                          items:
                            description:
                              LocalObjectReference contains enough information
                              to let you locate the referenced object inside the same
                              namespace.
                            properties:
                              name:
                                description:
                                  "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?"
                                type: string
                            type: object
                          type: array
                        serviceAccountName:
                          description:
                            "ServiceAccountName is the name of the ServiceAccount
                            to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
                          type: string
                        timeoutSeconds:
                          description:
                            TimeoutSeconds is the maximum duration in seconds
                            that the request routing layer will wait for a request delivered
                            to a container to begin replying (send network traffic).
                            If unspecified, a system default will be provided.
                          format: int64
                          type: integer
                        volumes:
                          description:
                            "List of volumes that can be mounted by containers
                            belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes"
                          items:
                            description:
                              Volume represents a named volume in a pod that
                              may be accessed by any container in the pod.
                            properties:
                              configMap:
                                description:
                                  ConfigMap represents a configMap that should
                                  populate this volume
                                properties:
                                  defaultMode:
                                    description:
                                      "Optional: mode bits used to set permissions
                                      on created files by default. Must be an octal
                                      value between 0000 and 0777 or a decimal value
                                      between 0 and 511. YAML accepts both octal and
                                      decimal values, JSON requires decimal values for
                                      mode bits. Defaults to 0644. Directories within
                                      the path are not affected by this setting. This
                                      might be in conflict with other options that affect
                                      the file mode, like fsGroup, and the result can
                                      be other mode bits set."
                                    format: int32
                                    type: integer
                                  items:
                                    description:
                                      If unspecified, each key-value pair
                                      in the Data field of the referenced ConfigMap
                                      will be projected into the volume as a file whose
                                      name is the key and content is the value. If specified,
                                      the listed keys will be projected into the specified
                                      paths, and unlisted keys will not be present.
                                      If a key is specified which is not present in
                                      the ConfigMap, the volume setup will error unless
                                      it is marked optional. Paths must be relative
                                      and may not contain the '..' path or start with
                                      '..'.
                                    items:
                                      description:
                                        Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: The key to project.
                                          type: string
                                        mode:
                                          description:
                                            "Optional: mode bits used to
                                            set permissions on this file. Must be an
                                            octal value between 0000 and 0777 or a decimal
                                            value between 0 and 511. YAML accepts both
                                            octal and decimal values, JSON requires
                                            decimal values for mode bits. If not specified,
                                            the volume defaultMode will be used. This
                                            might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits set."
                                          format: int32
                                          type: integer
                                        path:
                                          description:
                                            The relative path of the file
                                            to map the key to. May not be an absolute
                                            path. May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                        - key
                                        - path
                                      type: object
                                    type: array
                                  name:
                                    description:
                                      "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?"
                                    type: string
                                  optional:
                                    description:
                                      Specify whether the ConfigMap or its
                                      keys must be defined
                                    type: boolean
                                type: object
                              name:
                                description:
                                  "Volume's name. Must be a DNS_LABEL and
                                  unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                type: string
                              projected:
                                description:
                                  Items for all in one resources secrets,
                                  configmaps, and downward API
                                properties:
                                  defaultMode:
                                    description:
                                      Mode bits used to set permissions on
                                      created files by default. Must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. Directories within the path are not affected
                                      by this setting. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.
                                    format: int32
                                    type: integer
                                  sources:
                                    description: list of volume projections
                                    items:
                                      description:
                                        Projection that may be projected
                                        along with other supported volume types
                                      properties:
                                        configMap:
                                          description:
                                            information about the configMap
                                            data to project
                                          properties:
                                            items:
                                              description:
                                                If unspecified, each key-value
                                                pair in the Data field of the referenced
                                                ConfigMap will be projected into the
                                                volume as a file whose name is the key
                                                and content is the value. If specified,
                                                the listed keys will be projected into
                                                the specified paths, and unlisted keys
                                                will not be present. If a key is specified
                                                which is not present in the ConfigMap,
                                                the volume setup will error unless it
                                                is marked optional. Paths must be relative
                                                and may not contain the '..' path or
                                                start with '..'.
                                              items:
                                                description:
                                                  Maps a string key to a
                                                  path within a volume.
                                                properties:
                                                  key:
                                                    description: The key to project.
                                                    type: string
                                                  mode:
                                                    description:
                                                      "Optional: mode bits
                                                      used to set permissions on this
                                                      file. Must be an octal value between
                                                      0000 and 0777 or a decimal value
                                                      between 0 and 511. YAML accepts
                                                      both octal and decimal values,
                                                      JSON requires decimal values for
                                                      mode bits. If not specified, the
                                                      volume defaultMode will be used.
                                                      This might be in conflict with
                                                      other options that affect the
                                                      file mode, like fsGroup, and the
                                                      result can be other mode bits
                                                      set."
                                                    format: int32
                                                    type: integer
                                                  path:
                                                    description:
                                                      The relative path of
                                                      the file to map the key to. May
                                                      not be an absolute path. May not
                                                      contain the path element '..'.
                                                      May not start with the string
                                                      '..'.
                                                    type: string
                                                required:
                                                  - key
                                                  - path
                                                type: object
                                              type: array
                                            name:
                                              description:
                                                "Name of the referent. More
                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?"
                                              type: string
                                            optional:
                                              description:
                                                Specify whether the ConfigMap
                                                or its keys must be defined
                                              type: boolean
                                          type: object
                                        secret:
                                          description:
                                            information about the secret
                                            data to project
                                          properties:
                                            items:
                                              description:
                                                If unspecified, each key-value
                                                pair in the Data field of the referenced
                                                Secret will be projected into the volume
                                                as a file whose name is the key and
                                                content is the value. If specified,
                                                the listed keys will be projected into
                                                the specified paths, and unlisted keys
                                                will not be present. If a key is specified
                                                which is not present in the Secret,
                                                the volume setup will error unless it
                                                is marked optional. Paths must be relative
                                                and may not contain the '..' path or
                                                start with '..'.
                                              items:
                                                description:
                                                  Maps a string key to a
                                                  path within a volume.
                                                properties:
                                                  key:
                                                    description: The key to project.
                                                    type: string
                                                  mode:
                                                    description:
                                                      "Optional: mode bits
                                                      used to set permissions on this
                                                      file. Must be an octal value between
                                                      0000 and 0777 or a decimal value
                                                      between 0 and 511. YAML accepts
                                                      both octal and decimal values,
                                                      JSON requires decimal values for
                                                      mode bits. If not specified, the
                                                      volume defaultMode will be used.
                                                      This might be in conflict with
                                                      other options that affect the
                                                      file mode, like fsGroup, and the
                                                      result can be other mode bits
                                                      set."
                                                    format: int32
                                                    type: integer
                                                  path:
                                                    description:
                                                      The relative path of
                                                      the file to map the key to. May
                                                      not be an absolute path. May not
                                                      contain the path element '..'.
                                                      May not start with the string
                                                      '..'.
                                                    type: string
                                                required:
                                                  - key
                                                  - path
                                                type: object
                                              type: array
                                            name:
                                              description:
                                                "Name of the referent. More
                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?"
                                              type: string
                                            optional:
                                              description:
                                                Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          type: object
                                        serviceAccountToken:
                                          description:
                                            information about the serviceAccountToken
                                            data to project
                                          properties:
                                            audience:
                                              description:
                                                Audience is the intended
                                                audience of the token. A recipient of
                                                a token must identify itself with an
                                                identifier specified in the audience
                                                of the token, and otherwise should reject
                                                the token. The audience defaults to
                                                the identifier of the apiserver.
                                              type: string
                                            expirationSeconds:
                                              description:
                                                ExpirationSeconds is the
                                                requested duration of validity of the
                                                service account token. As the token
                                                approaches expiration, the kubelet volume
                                                plugin will proactively rotate the service
                                                account token. The kubelet will start
                                                trying to rotate the token if the token
                                                is older than 80 percent of its time
                                                to live or if the token is older than
                                                24 hours.Defaults to 1 hour and must
                                                be at least 10 minutes.
                                              format: int64
                                              type: integer
                                            path:
                                              description:
                                                Path is the path relative
                                                to the mount point of the file to project
                                                the token into.
                                              type: string
                                          required:
                                            - path
                                          type: object
                                      type: object
                                    type: array
                                type: object
                              secret:
                                description:
                                  "Secret represents a secret that should
                                  populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                properties:
                                  defaultMode:
                                    description:
                                      "Optional: mode bits used to set permissions
                                      on created files by default. Must be an octal
                                      value between 0000 and 0777 or a decimal value
                                      between 0 and 511. YAML accepts both octal and
                                      decimal values, JSON requires decimal values for
                                      mode bits. Defaults to 0644. Directories within
                                      the path are not affected by this setting. This
                                      might be in conflict with other options that affect
                                      the file mode, like fsGroup, and the result can
                                      be other mode bits set."
                                    format: int32
                                    type: integer
                                  items:
                                    description:
                                      If unspecified, each key-value pair
                                      in the Data field of the referenced Secret will
                                      be projected into the volume as a file whose name
                                      is the key and content is the value. If specified,
                                      the listed keys will be projected into the specified
                                      paths, and unlisted keys will not be present.
                                      If a key is specified which is not present in
                                      the Secret, the volume setup will error unless
                                      it is marked optional. Paths must be relative
                                      and may not contain the '..' path or start with
                                      '..'.
                                    items:
                                      description:
                                        Maps a string key to a path within
                                        a volume.
                                      properties:
                                        key:
                                          description: The key to project.
                                          type: string
                                        mode:
                                          description:
                                            "Optional: mode bits used to
                                            set permissions on this file. Must be an
                                            octal value between 0000 and 0777 or a decimal
                                            value between 0 and 511. YAML accepts both
                                            octal and decimal values, JSON requires
                                            decimal values for mode bits. If not specified,
                                            the volume defaultMode will be used. This
                                            might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits set."
                                          format: int32
                                          type: integer
                                        path:
                                          description:
                                            The relative path of the file
                                            to map the key to. May not be an absolute
                                            path. May not contain the path element '..'.
                                            May not start with the string '..'.
                                          type: string
                                      required:
                                        - key
                                        - path
                                      type: object
                                    type: array
                                  optional:
                                    description:
                                      Specify whether the Secret or its keys
                                      must be defined
                                    type: boolean
                                  secretName:
                                    description:
                                      "Name of the secret in the pod's namespace
                                      to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
                                    type: string
                                type: object
                            required:
                              - name
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                      required:
                        - containers
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                traffic:
                  description:
                    Traffic specifies how to distribute traffic over a collection
                    of revisions and configurations.
                  items:
                    description:
                      TrafficTarget holds a single entry of the routing table
                      for a Route.
                    properties:
                      configurationName:
                        description:
                          ConfigurationName of a configuration to whose latest
                          revision we will send this portion of traffic. When the "status.latestReadyRevisionName"
                          of the referenced configuration changes, we will automatically
                          migrate traffic from the prior "latest ready" revision to
                          the new one.  This field is never set in Route's status, only
                          its spec.  This is mutually exclusive with RevisionName.
                        type: string
                      latestRevision:
                        description:
                          LatestRevision may be optionally provided to indicate
                          that the latest ready Revision of the Configuration should
                          be used for this traffic target.  When provided LatestRevision
                          must be true if RevisionName is empty; it must be false when
                          RevisionName is non-empty.
                        type: boolean
                      percent:
                        description:
                          "Percent indicates that percentage based routing
                          should be used and the value indicates the percent of traffic
                          that is be routed to this Revision or Configuration. `0` (zero)
                          mean no traffic, `100` means all traffic. When percentage
                          based routing is being used the follow rules apply: - the
                          sum of all percent values must equal 100 - when not specified,
                          the implied value for `percent` is zero for   that particular
                          Revision or Configuration"
                        format: int64
                        type: integer
                      revisionName:
                        description:
                          RevisionName of a specific revision to which to
                          send this portion of traffic.  This is mutually exclusive
                          with ConfigurationName.
                        type: string
                      tag:
                        description:
                          Tag is optionally used to expose a dedicated url
                          for referencing this target exclusively.
                        type: string
                      url:
                        description:
                          URL displays the URL for accessing named traffic
                          targets. URL is displayed in status, and is disallowed on
                          spec. URL must contain a scheme (e.g. http://) and a hostname,
                          but may not contain anything else (e.g. basic auth, url path,
                          etc.)
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description:
                ServiceStatus represents the Status stanza of the Service
                resource.
              properties:
                address:
                  description:
                    Address holds the information needed for a Route to be
                    the target of an event.
                  properties:
                    url:
                      type: string
                  type: object
                annotations:
                  additionalProperties:
                    type: string
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    description:
                      "Condition defines a readiness condition for a Knative
                      resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties"
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                latestCreatedRevisionName:
                  description:
                    LatestCreatedRevisionName is the last revision that was
                    created from this Configuration. It might not be ready yet, for
                    that use LatestReadyRevisionName.
                  type: string
                latestReadyRevisionName:
                  description:
                    LatestReadyRevisionName holds the name of the latest
                    Revision stamped out from this Configuration that has had its "Ready"
                    condition become "True".
                  type: string
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                traffic:
                  description:
                    Traffic holds the configured traffic distribution. These
                    entries will always contain RevisionName references. When ConfigurationName
                    appears in the spec, this will hold the LatestReadyRevisionName
                    that we last observed.
                  items:
                    description:
                      TrafficTarget holds a single entry of the routing table
                      for a Route.
                    properties:
                      configurationName:
                        description:
                          ConfigurationName of a configuration to whose latest
                          revision we will send this portion of traffic. When the "status.latestReadyRevisionName"
                          of the referenced configuration changes, we will automatically
                          migrate traffic from the prior "latest ready" revision to
                          the new one.  This field is never set in Route's status, only
                          its spec.  This is mutually exclusive with RevisionName.
                        type: string
                      latestRevision:
                        description:
                          LatestRevision may be optionally provided to indicate
                          that the latest ready Revision of the Configuration should
                          be used for this traffic target.  When provided LatestRevision
                          must be true if RevisionName is empty; it must be false when
                          RevisionName is non-empty.
                        type: boolean
                      percent:
                        description:
                          "Percent indicates that percentage based routing
                          should be used and the value indicates the percent of traffic
                          that is be routed to this Revision or Configuration. `0` (zero)
                          mean no traffic, `100` means all traffic. When percentage
                          based routing is being used the follow rules apply: - the
                          sum of all percent values must equal 100 - when not specified,
                          the implied value for `percent` is zero for   that particular
                          Revision or Configuration"
                        format: int64
                        type: integer
                      revisionName:
                        description:
                          RevisionName of a specific revision to which to
                          send this portion of traffic.  This is mutually exclusive
                          with ConfigurationName.
                        type: string
                      tag:
                        description:
                          Tag is optionally used to expose a dedicated url
                          for referencing this target exclusively.
                        type: string
                      url:
                        description:
                          URL displays the URL for accessing named traffic
                          targets. URL is displayed in status, and is disallowed on
                          spec. URL must contain a scheme (e.g. http://) and a hostname,
                          but may not contain anything else (e.g. basic auth, url path,
                          etc.)
                        type: string
                    type: object
                  type: array
                url:
                  description:
                    URL holds the url that will distribute traffic over the
                    provided traffic targets. It generally has the form http[s]://{route-name}.{route-namespace}.{cluster-level-suffix}
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/binding: "true"
    duck.knative.dev/source: "true"
    eventing.knative.dev/release: v1.2.4
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: sinkbindings.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
      - all
      - knative
      - sources
      - bindings
    kind: SinkBinding
    plural: sinkbindings
    singular: sinkbinding
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.sinkUri
          name: Sink
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            SinkBinding describes a Binding that is also a Source. The `sink`
            (from the Source duck) is resolved to a URL and then projected into the
            `subject` by augmenting the runtime contract of the referenced containers
            to have a `K_SINK` environment variable holding the endpoint to which to
            send cloud events.
          properties:
            spec:
              properties:
                ceOverrides:
                  description:
                    CloudEventOverrides defines overrides to control the
                    output format and modifications of the event sent to the sink.
                  properties:
                    extensions:
                      description:
                        Extensions specify what attribute are added or overridden
                        on the outbound event. Each `Extensions` key-value pair are
                        set on the event as an attribute extension independently.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                sink:
                  description:
                    Sink is a reference to an object that will resolve to
                    a uri to use as the sink.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
                subject:
                  description:
                    Subject references the resource(s) whose "runtime contract"
                    should be augmented by Binding implementations.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      type: string
                    name:
                      description: Name of the referent. Mutually exclusive with Selector.
                      type: string
                    namespace:
                      description: Namespace of the referent.
                      type: string
                    selector:
                      description:
                        Selector of the referents. Mutually exclusive with
                        Name.
                      properties:
                        matchExpressions:
                          description:
                            matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            properties:
                              key:
                                description:
                                  key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description:
                                  operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description:
                                  values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        matchLabels:
                          description:
                            matchLabels is a map of {key,value} pairs. A
                            single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is "key",
                            the operator is "In", and the values array contains only
                            "value". The requirements are ANDed.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                  type: object
              type: object
            status:
              properties:
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                ceAttributes:
                  description:
                    CloudEventAttributes are the specific attributes that
                    the Source uses as part of its CloudEvents.
                  items:
                    properties:
                      source:
                        description: Source is the CloudEvents source attribute.
                        type: string
                      type:
                        description: Type refers to the CloudEvent type attribute.
                        type: string
                    type: object
                  type: array
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                sinkUri:
                  description:
                    SinkURI is the current active sink URI that has been
                    configured for the Source.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: subscriptions.messaging.knative.dev
spec:
  group: messaging.knative.dev
  names:
    categories:
      - all
      - knative
      - messaging
    kind: Subscription
    plural: subscriptions
    shortNames:
      - sub
    singular: subscription
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            Subscription routes events received on a Channel to a DNS name
            and corresponds to the subscriptions.channels.knative.dev CRD.
          properties:
            spec:
              properties:
                channel:
                  description:
                    "Reference to a channel that will be used to create the
                    subscription. You can specify only the following fields of the KReference:
                    kind, apiVersion and name. The resource pointed by this KReference
                    must meet the contract to the ChannelableSpec duck type. If the
                    resource does not meet this contract it will be reflected in the
                    Subscription's status.  This field is immutable. We have no good
                    answer on what happens to the events that are currently in the channel
                    being consumed from and what the semantics there should be. For
                    now, you can always delete the Subscription and recreate it to point
                    to a different channel, giving the user more control over what semantics
                    should be used (drain the channel first, possibly have events dropped,
                    etc.)"
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    name:
                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: string
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                delivery:
                  description: Delivery configuration
                  properties:
                    backoffDelay:
                      description:
                        "BackoffDelay is the delay before retrying. More
                        information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html
                        - https://en.wikipedia.org/wiki/ISO_8601  For linear policy,
                        backoff delay is backoffDelay*<numberOfRetries>. For exponential
                        policy, backoff delay is backoffDelay*2^<numberOfRetries>."
                      type: string
                    backoffPolicy:
                      description:
                        BackoffPolicy is the retry backoff policy (linear,
                        exponential).
                      type: string
                    deadLetterSink:
                      description:
                        DeadLetterSink is the sink receiving event that could
                        not be sent to a destination.
                      properties:
                        ref:
                          description: Ref points to an Addressable.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            kind:
                              description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                              type: string
                            name:
                              description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: string
                            namespace:
                              description:
                                "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                This is optional field, it gets defaulted to the object
                                holding it if left out."
                              type: string
                          type: object
                        uri:
                          description:
                            URI can be an absolute URL(non-empty scheme and
                            non-empty host) pointing to the target or a relative URI.
                            Relative URIs will be resolved using the base URI retrieved
                            from Ref.
                          type: string
                      type: object
                    retry:
                      description:
                        Retry is the minimum number of retries the sender
                        should attempt when sending an event before moving it to the
                        dead letter sink.
                      format: int32
                      type: integer
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                reply:
                  description:
                    Reply specifies (optionally) how to handle events returned
                    from the Subscriber target.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
                subscriber:
                  description:
                    Subscriber is reference to (optional) function for processing
                    events. Events from the Channel will be delivered here and replies
                    are sent to a Destination as specified by the Reply.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
              type: object
            status:
              properties:
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                physicalSubscription:
                  description:
                    PhysicalSubscription is the fully resolved values that
                    this Subscription represents.
                  properties:
                    deadLetterSinkUri:
                      description: ReplyURI is the fully resolved URI for the spec.delivery.deadLetterSink.
                      type: string
                    replyUri:
                      description: ReplyURI is the fully resolved URI for the spec.reply.
                      type: string
                    subscriberUri:
                      description: SubscriberURI is the fully resolved URI for spec.subscriber.
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    knative.dev/crd-install: "true"
    kustomize.component: knative
  name: triggers.eventing.knative.dev
spec:
  group: eventing.knative.dev
  names:
    categories:
      - all
      - knative
      - eventing
    kind: Trigger
    plural: triggers
    singular: trigger
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.broker
          name: Broker
          type: string
        - jsonPath: .status.subscriberUri
          name: Subscriber_URI
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description:
            Trigger represents a request to have events delivered to a subscriber
            from a Broker's event pool.
          properties:
            spec:
              description: Spec defines the desired state of the Trigger.
              properties:
                broker:
                  description:
                    Broker is the broker that this trigger receives events
                    from.
                  type: string
                delivery:
                  description:
                    Delivery contains the delivery spec for this specific
                    trigger.
                  properties:
                    backoffDelay:
                      description:
                        "BackoffDelay is the delay before retrying. More
                        information on Duration format: - https://www.iso.org/iso-8601-date-and-time-format.html
                        - https://en.wikipedia.org/wiki/ISO_8601  For linear policy,
                        backoff delay is backoffDelay*<numberOfRetries>. For exponential
                        policy, backoff delay is backoffDelay*2^<numberOfRetries>."
                      type: string
                    backoffPolicy:
                      description:
                        BackoffPolicy is the retry backoff policy (linear,
                        exponential).
                      type: string
                    deadLetterSink:
                      description:
                        DeadLetterSink is the sink receiving event that could
                        not be sent to a destination.
                      properties:
                        ref:
                          description: Ref points to an Addressable.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            kind:
                              description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                              type: string
                            name:
                              description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              type: string
                            namespace:
                              description:
                                "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                This is optional field, it gets defaulted to the object
                                holding it if left out."
                              type: string
                          type: object
                        uri:
                          description:
                            URI can be an absolute URL(non-empty scheme and
                            non-empty host) pointing to the target or a relative URI.
                            Relative URIs will be resolved using the base URI retrieved
                            from Ref.
                          type: string
                      type: object
                    retry:
                      description:
                        Retry is the minimum number of retries the sender
                        should attempt when sending an event before moving it to the
                        dead letter sink.
                      format: int32
                      type: integer
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                filter:
                  description:
                    "Filter is the filter to apply against all events from
                    the Broker. Only events that pass this filter will be sent to the
                    Subscriber. If not specified, will default to allowing all events. "
                  properties:
                    attributes:
                      description:
                        "Attributes filters events by exact match on event
                        context attributes. Each key in the map is compared with the
                        equivalent key in the event context. An event passes the filter
                        if all values are equal to the specified values.  Nested context
                        attributes are not supported as keys. Only string values are
                        supported. "
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                subscriber:
                  description:
                    Subscriber is the addressable that receives events from
                    the Broker that pass the Filter. It is required.
                  properties:
                    ref:
                      description: Ref points to an Addressable.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        kind:
                          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          type: string
                        name:
                          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          type: string
                        namespace:
                          description:
                            "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            This is optional field, it gets defaulted to the object
                            holding it if left out."
                          type: string
                      type: object
                    uri:
                      description:
                        URI can be an absolute URL(non-empty scheme and non-empty
                        host) pointing to the target or a relative URI. Relative URIs
                        will be resolved using the base URI retrieved from Ref.
                      type: string
                  type: object
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              description:
                Status represents the current state of the Trigger. This
                data may be out of date.
              properties:
                annotations:
                  description:
                    Annotations is additional Status fields for the Resource
                    to save some additional State as well as convey more information
                    to the user. This is roughly akin to Annotations on any k8s resource,
                    just the reconciler conveying richer information outwards.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                conditions:
                  description:
                    Conditions the latest available observations of a resource's
                    current state.
                  items:
                    properties:
                      lastTransitionTime:
                        description:
                          LastTransitionTime is the last time the condition
                          transitioned from one status to another. We use VolatileTime
                          in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description:
                          Severity with which to treat failures of this type
                          of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                      - type
                      - status
                    type: object
                  type: array
                deadLetterSinkUri:
                  description:
                    DeadLetterSinkURI is the resolved URI of the dead letter
                    sink for this Trigger, in case there is none this will fallback
                    to it's Broker status DeadLetterSinkURI.
                  type: string
                observedGeneration:
                  description:
                    ObservedGeneration is the 'Generation' of the Service
                    that was last processed by the controller.
                  format: int64
                  type: integer
                subscriberUri:
                  description:
                    SubscriberURI is the resolved URI of the receiver for
                    this Trigger.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cluster-local-gateway
    install.operator.istio.io/owning-resource: unknown
    istio: cluster-local-gateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: cluster-local-gateway-service-account
  namespace: istio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-controller
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-webhook
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: pingsource-mt-adapter
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: controller
  namespace: knative-serving
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: cluster-local-gateway-sds
  namespace: istio-system
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: knative-eventing-webhook
  namespace: knative-eventing
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
      - update
      - list
      - watch
      - patch
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/addressable: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: addressable-resolver
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: broker-addressable-resolver
rules:
  - apiGroups:
      - eventing.knative.dev
    resources:
      - brokers
      - brokers/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/podspecable: "true"
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: builtin-podspecable-binding
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - statefulsets
      - replicasets
    verbs:
      - list
      - watch
      - patch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - list
      - watch
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: channel-addressable-resolver
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - channels
      - channels/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - messaging.knative.dev
    resources:
      - channels/finalizers
    verbs:
      - update
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/channelable: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: channelable-manipulator
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-broker-filter
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - triggers
      - triggers/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-broker-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-config-reader
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/source: "true"
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-sources-source-observer
rules:
  - apiGroups:
      - sources.knative.dev
    resources:
      - apiserversources
      - pingsources
      - sinkbindings
      - containersources
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: flows-addressable-resolver
rules:
  - apiGroups:
      - flows.knative.dev
    resources:
      - sequences
      - sequences/status
      - parallels
      - parallels/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: "true"
  name: knative-bindings-namespaced-admin
rules:
  - apiGroups:
      - bindings.knative.dev
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: knative-eventing-controller
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - secrets
      - configmaps
      - services
      - endpoints
      - events
      - serviceaccounts
      - pods
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - brokers
      - brokers/status
      - triggers
      - triggers/status
      - eventtypes
      - eventtypes/status
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - brokers/finalizers
      - triggers/finalizers
    verbs:
      - update
  - apiGroups:
      - messaging.knative.dev
    resources:
      - sequences
      - sequences/status
      - channels
      - channels/status
      - parallels
      - parallels/status
      - subscriptions
      - subscriptions/status
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - flows.knative.dev
    resources:
      - sequences
      - sequences/status
      - parallels
      - parallels/status
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - messaging.knative.dev
    resources:
      - sequences/finalizers
      - parallels/finalizers
      - channels/finalizers
    verbs:
      - update
  - apiGroups:
      - flows.knative.dev
    resources:
      - sequences/finalizers
      - parallels/finalizers
    verbs:
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: "true"
  name: knative-eventing-namespaced-admin
rules:
  - apiGroups:
      - eventing.knative.dev
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-edit: "true"
  name: knative-eventing-namespaced-edit
rules:
  - apiGroups:
      - eventing.knative.dev
      - messaging.knative.dev
      - sources.knative.dev
      - flows.knative.dev
      - bindings.knative.dev
    resources:
      - "*"
    verbs:
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-view: "true"
  name: knative-eventing-namespaced-view
rules:
  - apiGroups:
      - eventing.knative.dev
      - messaging.knative.dev
      - sources.knative.dev
      - flows.knative.dev
      - bindings.knative.dev
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: knative-eventing-pingsource-mt-adapter
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - sources.knative.dev
    resources:
      - pingsources
      - pingsources/status
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - sources.knative.dev
    resources:
      - pingsources/finalizers
    verbs:
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: knative-eventing-sources-controller
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
      - services
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - sources.knative.dev
    resources:
      - sinkbindings
      - sinkbindings/status
      - sinkbindings/finalizers
      - apiserversources
      - apiserversources/status
      - apiserversources/finalizers
      - pingsources
      - pingsources/status
      - pingsources/finalizers
      - containersources
      - containersources/status
      - containersources/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - serving.knative.dev
    resources:
      - services
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - eventing.knative.dev
    resources:
      - eventtypes
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: knative-eventing-webhook
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - create
      - update
      - list
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces/finalizers
    verbs:
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - sources.knative.dev
    resources:
      - sinkbindings
      - sinkbindings/status
      - sinkbindings/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: "true"
  name: knative-flows-namespaced-admin
rules:
  - apiGroups:
      - flows.knative.dev
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: "true"
  name: knative-messaging-namespaced-admin
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    duck.knative.dev/addressable: "true"
    serving.knative.dev/release: v1.2.5
  name: knative-serving-addressable-resolver
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - routes
      - routes/status
      - services
      - services/status
    verbs:
      - get
      - list
      - watch
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        serving.knative.dev/controller: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: knative-serving-admin
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/addressable: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: knative-serving-aggregated-addressable-resolver
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/controller: "true"
    serving.knative.dev/release: v1.2.5
  name: knative-serving-core
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
      - secrets
      - configmaps
      - endpoints
      - services
      - events
      - serviceaccounts
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints/restricted
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - namespaces/finalizers
    verbs:
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
      - customresourcedefinitions/status
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - serving.knative.dev
      - autoscaling.internal.knative.dev
      - networking.internal.knative.dev
    resources:
      - "*"
      - "*/status"
      - "*/finalizers"
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - deletecollection
      - patch
      - watch
  - apiGroups:
      - caching.internal.knative.dev
    resources:
      - images
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/controller: "true"
    serving.knative.dev/release: v1.2.0
  name: knative-serving-istio
rules:
  - apiGroups:
      - networking.istio.io
    resources:
      - virtualservices
      - gateways
      - destinationrules
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: "true"
    serving.knative.dev/release: v1.2.5
  name: knative-serving-namespaced-admin
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - networking.internal.knative.dev
      - autoscaling.internal.knative.dev
      - caching.internal.knative.dev
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-edit: "true"
    serving.knative.dev/release: v1.2.5
  name: knative-serving-namespaced-edit
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - "*"
    verbs:
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - networking.internal.knative.dev
      - autoscaling.internal.knative.dev
      - caching.internal.knative.dev
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-view: "true"
    serving.knative.dev/release: v1.2.5
  name: knative-serving-namespaced-view
rules:
  - apiGroups:
      - serving.knative.dev
      - networking.internal.knative.dev
      - autoscaling.internal.knative.dev
      - caching.internal.knative.dev
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    duck.knative.dev/podspecable: "true"
    serving.knative.dev/release: v1.2.5
  name: knative-serving-podspecable-binding
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - configurations
      - services
    verbs:
      - list
      - watch
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: "true"
  name: knative-sources-namespaced-admin
rules:
  - apiGroups:
      - sources.knative.dev
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/channelable: "true"
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: meta-channelable-manipulator
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - channels
      - channels/status
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/podspecable: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: podspecable-binding
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: service-addressable-resolver
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    duck.knative.dev/addressable: "true"
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: serving-addressable-resolver
rules:
  - apiGroups:
      - serving.knative.dev
    resources:
      - routes
      - routes/status
      - services
      - services/status
    verbs:
      - get
      - list
      - watch
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        duck.knative.dev/source: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: source-observer
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: cluster-local-gateway-sds
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-local-gateway-sds
subjects:
  - kind: ServiceAccount
    name: cluster-local-gateway-service-account
    namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-webhook
  namespace: knative-eventing
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: knative-eventing-webhook
subjects:
  - kind: ServiceAccount
    name: eventing-webhook
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-controller
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-controller-manipulator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: channelable-manipulator
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-controller-resolver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addressable-resolver
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-controller-source-observer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: source-observer
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-controller-sources-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-sources-controller
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-webhook
subjects:
  - kind: ServiceAccount
    name: eventing-webhook
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-webhook-podspecable-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: podspecable-binding
subjects:
  - kind: ServiceAccount
    name: eventing-webhook
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-webhook-resolver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: addressable-resolver
subjects:
  - kind: ServiceAccount
    name: eventing-webhook
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: knative-eventing-pingsource-mt-adapter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-pingsource-mt-adapter
subjects:
  - kind: ServiceAccount
    name: pingsource-mt-adapter
    namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: knative-serving-controller-addressable-resolver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-serving-aggregated-addressable-resolver
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: knative-serving
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: knative-serving-controller-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-serving-admin
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: knative-serving
---
apiVersion: v1
data:
  channel-template-spec: |
    apiVersion: messaging.knative.dev/v1
    kind: InMemoryChannel
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: config-br-default-channel
  namespace: knative-eventing
---
apiVersion: v1
data:
  default-br-config: |
    clusterDefault:
      brokerClass: MTChannelBasedBroker
      apiVersion: v1
      kind: ConfigMap
      name: config-br-default-channel
      namespace: knative-eventing
      delivery:
        retry: 10
        backoffPolicy: exponential
        backoffDelay: PT0.2S
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: config-br-defaults
  namespace: knative-eventing
---
apiVersion: v1
data:
  delivery-retryafter: disabled
  delivery-timeout: disabled
  kreference-group: disabled
  kreference-mapping: disabled
  new-trigger-filters: disabled
  strict-subscriber: disabled
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    knative.dev/config-category: eventing
    knative.dev/config-propagation: original
    kustomize.component: knative
  name: config-features
  namespace: knative-eventing
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.

    # this is an example of mapping from pod to addressable-pod service
    # the data key must be of the form "kind.version.group"
    # the data value must be a valid URL. Valid template data are:
    # - Name: reference name
    # - Namespace: reference namespace
    # - SystemNamespace: knative namespace
    # - UID: reference UID
    #
    # Pod.v1: https://addressable-pod.{{ .SystemNamespace }}.svc.cluster.local/{{ .Name }}
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: 7375dbe1
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    eventing.knative.dev/release: v1.2.4
    knative.dev/config-category: eventing
    knative.dev/config-propagation: original
    kustomize.component: knative
  name: config-kreference-mapping
  namespace: knative-eventing
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # lease-duration is how long non-leaders will wait to try to acquire the
    # lock; 15 seconds is the value used by core kubernetes controllers.
    lease-duration: "15s"

    # renew-deadline is how long a leader will try to renew the lease before
    # giving up; 10 seconds is the value used by core kubernetes controllers.
    renew-deadline: "10s"

    # retry-period is how long the leader election client waits between tries of
    # actions; 2 seconds is the value used by core kubernetes controllers.
    retry-period: "2s"

    # buckets is the number of buckets used to partition key space of each
    # Reconciler. If this number is M and the replica number of the controller
    # is N, the N replicas will compete for the M buckets. The owner of a
    # bucket will take care of the reconciling for the keys partitioned into
    # that bucket.
    buckets: "1"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: f7948630
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: config-leader-election
  namespace: knative-eventing
---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    knative.dev/config-category: eventing
    knative.dev/config-propagation: original
    kustomize.component: knative
  name: config-logging
  namespace: knative-eventing
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus

    # metrics.request-metrics-backend-destination specifies the request metrics
    # destination. If non-empty, it enables queue proxy to send request metrics.
    # Currently supported values: prometheus, stackdriver.
    metrics.request-metrics-backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_broker", "knative_trigger", and "knative_source" resource types.
    # Setting this flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"

    # profiling.enable indicates whether it is allowed to retrieve runtime profiling data from
    # the pods via an HTTP server in the format expected by the pprof visualization tool. When
    # enabled, the Knative Eventing pods expose the profiling data on an alternate HTTP port 8008.
    # The HTTP context root for profiling is then /debug/pprof/.
    profiling.enable: "false"

    # sink-event-error-reporting.enable whether the adapter reports a kube event to the CRD indicating
    # a failure to send a cloud event to the sink.
    sink-event-error-reporting.enable: "false"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: f46cf09d
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    knative.dev/config-category: eventing
    knative.dev/config-propagation: original
    kustomize.component: knative
  name: config-observability
  namespace: knative-eventing
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # Max number of bytes allowed to be sent for message excluding any
    # base64 decoding. Default is no limit set for data
    data-max-size: -1
kind: ConfigMap
metadata:
  annotations:
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    knative.dev/example-checksum: 9185c153
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: config-ping-defaults
  namespace: knative-eventing
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    #
    # This may be "zipkin" or "none". the default is "none"
    backend: "none"

    # URL to zipkin collector where traces are sent.
    # This must be specified when backend is "zipkin"
    zipkin-endpoint: "http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans"

    # Enable zipkin debug mode. This allows all spans to be sent to the server
    # bypassing sampling.
    debug: "false"

    # Percentage (0-1) of requests to trace
    sample-rate: "0.1"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: 0492ceb0
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    knative.dev/config-category: eventing
    knative.dev/config-propagation: original
    kustomize.component: knative
  name: config-tracing
  namespace: knative-eventing
---
apiVersion: v1
data:
  default-ch-config: |
    clusterDefault:
      apiVersion: messaging.knative.dev/v1
      kind: InMemoryChannel
    namespaceDefaults:
      some-namespace:
        apiVersion: messaging.knative.dev/v1
        kind: InMemoryChannel
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: default-ch-webhook
  namespace: knative-eventing
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # The Revision ContainerConcurrency field specifies the maximum number
    # of requests the Container can handle at once. Container concurrency
    # target percentage is how much of that maximum to use in a stable
    # state. E.g. if a Revision specifies ContainerConcurrency of 10, then
    # the Autoscaler will try to maintain 7 concurrent connections per pod
    # on average.
    # Note: this limit will be applied to container concurrency set at every
    # level (ConfigMap, Revision Spec or Annotation).
    # For legacy and backwards compatibility reasons, this value also accepts
    # fractional values in (0, 1] interval (i.e. 0.7 ⇒ 70%).
    # Thus minimal percentage value must be greater than 1.0, or it will be
    # treated as a fraction.
    # NOTE: that this value does not affect actual number of concurrent requests
    #       the user container may receive, but only the average number of requests
    #       that the revision pods will receive.
    container-concurrency-target-percentage: "70"

    # The container concurrency target default is what the Autoscaler will
    # try to maintain when concurrency is used as the scaling metric for the
    # Revision and the Revision specifies unlimited concurrency.
    # When revision explicitly specifies container concurrency, that value
    # will be used as a scaling target for autoscaler.
    # When specifying unlimited concurrency, the autoscaler will
    # horizontally scale the application based on this target concurrency.
    # This is what we call "soft limit" in the documentation, i.e. it only
    # affects number of pods and does not affect the number of requests
    # individual pod processes.
    # The value must be a positive number such that the value multiplied
    # by container-concurrency-target-percentage is greater than 0.01.
    # NOTE: that this value will be adjusted by application of
    #       container-concurrency-target-percentage, i.e. by default
    #       the system will target on average 70 concurrent requests
    #       per revision pod.
    # NOTE: Only one metric can be used for autoscaling a Revision.
    container-concurrency-target-default: "100"

    # The requests per second (RPS) target default is what the Autoscaler will
    # try to maintain when RPS is used as the scaling metric for a Revision and
    # the Revision specifies unlimited RPS. Even when specifying unlimited RPS,
    # the autoscaler will horizontally scale the application based on this
    # target RPS.
    # Must be greater than 1.0.
    # NOTE: Only one metric can be used for autoscaling a Revision.
    requests-per-second-target-default: "200"

    # The target burst capacity specifies the size of burst in concurrent
    # requests that the system operator expects the system will receive.
    # Autoscaler will try to protect the system from queueing by introducing
    # Activator in the request path if the current spare capacity of the
    # service is less than this setting.
    # If this setting is 0, then Activator will be in the request path only
    # when the revision is scaled to 0.
    # If this setting is > 0 and container-concurrency-target-percentage is
    # 100% or 1.0, then activator will always be in the request path.
    # -1 denotes unlimited target-burst-capacity and activator will always
    # be in the request path.
    # Other negative values are invalid.
    target-burst-capacity: "200"

    # When operating in a stable mode, the autoscaler operates on the
    # average concurrency over the stable window.
    # Stable window must be in whole seconds.
    stable-window: "60s"

    # When observed average concurrency during the panic window reaches
    # panic-threshold-percentage the target concurrency, the autoscaler
    # enters panic mode. When operating in panic mode, the autoscaler
    # scales on the average concurrency over the panic window which is
    # panic-window-percentage of the stable-window.
    # Must be in the [1, 100] range.
    # When computing the panic window it will be rounded to the closest
    # whole second, at least 1s.
    panic-window-percentage: "10.0"

    # The percentage of the container concurrency target at which to
    # enter panic mode when reached within the panic window.
    panic-threshold-percentage: "200.0"

    # Max scale up rate limits the rate at which the autoscaler will
    # increase pod count. It is the maximum ratio of desired pods versus
    # observed pods.
    # Cannot be less or equal to 1.
    # I.e with value of 2.0 the number of pods can at most go N to 2N
    # over single Autoscaler period (2s), but at least N to
    # N+1, if Autoscaler needs to scale up.
    max-scale-up-rate: "1000.0"

    # Max scale down rate limits the rate at which the autoscaler will
    # decrease pod count. It is the maximum ratio of observed pods versus
    # desired pods.
    # Cannot be less or equal to 1.
    # I.e. with value of 2.0 the number of pods can at most go N to N/2
    # over single Autoscaler evaluation period (2s), but at
    # least N to N-1, if Autoscaler needs to scale down.
    max-scale-down-rate: "2.0"

    # Scale to zero feature flag.
    enable-scale-to-zero: "true"

    # Scale to zero grace period is the time an inactive revision is left
    # running before it is scaled to zero (must be positive, but recommended
    # at least a few seconds if running with mesh networking).
    # This is the upper limit and is provided not to enforce timeout after
    # the revision stopped receiving requests for stable window, but to
    # ensure network reprogramming to put activator in the path has completed.
    # If the system determines that a shorter period is satisfactory,
    # then the system will only wait that amount of time before scaling to 0.
    # NOTE: this period might actually be 0, if activator has been
    # in the request path sufficiently long.
    # If there is necessity for the last pod to linger longer use
    # scale-to-zero-pod-retention-period flag.
    scale-to-zero-grace-period: "30s"

    # Scale to zero pod retention period defines the minimum amount
    # of time the last pod will remain after Autoscaler has decided to
    # scale to zero.
    # This flag is for the situations where the pod startup is very expensive
    # and the traffic is bursty (requiring smaller windows for fast action),
    # but patchy.
    # The larger of this flag and `scale-to-zero-grace-period` will effectively
    # determine how the last pod will hang around.
    scale-to-zero-pod-retention-period: "0s"

    # pod-autoscaler-class specifies the default pod autoscaler class
    # that should be used if none is specified. If omitted,
    # the Knative Pod Autoscaler (KPA) is used by default.
    pod-autoscaler-class: "kpa.autoscaling.knative.dev"

    # The capacity of a single activator task.
    # The `unit` is one concurrent request proxied by the activator.
    # activator-capacity must be at least 1.
    # This value is used for computation of the Activator subset size.
    # See the algorithm here: http://bit.ly/38XiCZ3.
    # TODO(vagababov): tune after actual benchmarking.
    activator-capacity: "100.0"

    # initial-scale is the cluster-wide default value for the initial target
    # scale of a revision after creation, unless overridden by the
    # "autoscaling.knative.dev/initialScale" annotation.
    # This value must be greater than 0 unless allow-zero-initial-scale is true.
    initial-scale: "1"

    # allow-zero-initial-scale controls whether either the cluster-wide initial-scale flag,
    # or the "autoscaling.knative.dev/initialScale" annotation, can be set to 0.
    allow-zero-initial-scale: "false"

    # min-scale is the cluster-wide default value for the min scale of a revision,
    # unless overridden by the "autoscaling.knative.dev/minScale" annotation.
    min-scale: "0"

    # max-scale is the cluster-wide default value for the max scale of a revision,
    # unless overridden by the "autoscaling.knative.dev/maxScale" annotation.
    # If set to 0, the revision has no maximum scale.
    max-scale: "0"

    # scale-down-delay is the amount of time that must pass at reduced
    # concurrency before a scale down decision is applied. This can be useful,
    # for example, to maintain replica count and avoid a cold start penalty if
    # more requests come in within the scale down delay period.
    # The default, 0s, imposes no delay at all.
    scale-down-delay: "0s"

    # max-scale-limit sets the maximum permitted value for the max scale of a revision.
    # When this is set to a positive value, a revision with a maxScale above that value
    # (including a maxScale of "0" = unlimited) is disallowed.
    # A value of zero (the default) allows any limit, including unlimited.
    max-scale-limit: "0"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: 16af78ce
  labels:
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-autoscaler
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # revision-timeout-seconds contains the default number of
    # seconds to use for the revision's per-request timeout, if
    # none is specified.
    revision-timeout-seconds: "300"  # 5 minutes

    # max-revision-timeout-seconds contains the maximum number of
    # seconds that can be used for revision-timeout-seconds.
    # This value must be greater than or equal to revision-timeout-seconds.
    # If omitted, the system default is used (600 seconds).
    #
    # If this value is increased, the activator's terminationGraceTimeSeconds
    # should also be increased to prevent in-flight requests being disrupted.
    max-revision-timeout-seconds: "600"  # 10 minutes

    # revision-cpu-request contains the cpu allocation to assign
    # to revisions by default.  If omitted, no value is specified
    # and the system default is used.
    # Below is an example of setting revision-cpu-request.
    # By default, it is not set by Knative.
    revision-cpu-request: "400m"  # 0.4 of a CPU (aka 400 milli-CPU)

    # revision-memory-request contains the memory allocation to assign
    # to revisions by default.  If omitted, no value is specified
    # and the system default is used.
    # Below is an example of setting revision-memory-request.
    # By default, it is not set by Knative.
    revision-memory-request: "100M"  # 100 megabytes of memory

    # revision-ephemeral-storage-request contains the ephemeral storage
    # allocation to assign to revisions by default.  If omitted, no value is
    # specified and the system default is used.
    revision-ephemeral-storage-request: "500M"  # 500 megabytes of storage

    # revision-cpu-limit contains the cpu allocation to limit
    # revisions to by default.  If omitted, no value is specified
    # and the system default is used.
    # Below is an example of setting revision-cpu-limit.
    # By default, it is not set by Knative.
    revision-cpu-limit: "1000m"  # 1 CPU (aka 1000 milli-CPU)

    # revision-memory-limit contains the memory allocation to limit
    # revisions to by default.  If omitted, no value is specified
    # and the system default is used.
    # Below is an example of setting revision-memory-limit.
    # By default, it is not set by Knative.
    revision-memory-limit: "200M"  # 200 megabytes of memory

    # revision-ephemeral-storage-limit contains the ephemeral storage
    # allocation to limit revisions to by default.  If omitted, no value is
    # specified and the system default is used.
    revision-ephemeral-storage-limit: "750M"  # 750 megabytes of storage

    # container-name-template contains a template for the default
    # container name, if none is specified.  This field supports
    # Go templating and is supplied with the ObjectMeta of the
    # enclosing Service or Configuration, so values such as
    # {{.Name}} are also valid.
    container-name-template: "user-container"

    # init-container-name-template contains a template for the default
    # init container name, if none is specified.  This field supports
    # Go templating and is supplied with the ObjectMeta of the
    # enclosing Service or Configuration, so values such as
    # {{.Name}} are also valid.
    init-container-name-template: "init-container"

    # container-concurrency specifies the maximum number
    # of requests the Container can handle at once, and requests
    # above this threshold are queued.  Setting a value of zero
    # disables this throttling and lets through as many requests as
    # the pod receives.
    container-concurrency: "0"

    # The container concurrency max limit is an operator setting ensuring that
    # the individual revisions cannot have arbitrary large concurrency
    # values, or autoscaling targets. `container-concurrency` default setting
    # must be at or below this value.
    #
    # Must be greater than 1.
    #
    # Note: even with this set, a user can choose a containerConcurrency
    # of 0 (i.e. unbounded) unless allow-container-concurrency-zero is
    # set to "false".
    container-concurrency-max-limit: "1000"

    # allow-container-concurrency-zero controls whether users can
    # specify 0 (i.e. unbounded) for containerConcurrency.
    allow-container-concurrency-zero: "true"

    # enable-service-links specifies the default value used for the
    # enableServiceLinks field of the PodSpec, when it is omitted by the user.
    # See: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service
    #
    # This is a tri-state flag with possible values of (true|false|default).
    #
    # In environments with large number of services it is suggested
    # to set this value to `false`.
    # See https://github.com/knative/serving/issues/8498.
    enable-service-links: "false"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: a0feb4c6
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-defaults
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |-
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # List of repositories for which tag to digest resolving should be skipped
    registries-skipping-tag-resolving: "kind.local,ko.local,dev.local"

    # Maximum time allowed for an image's digests to be resolved.
    digest-resolution-timeout: "10s"

    # Duration we wait for the deployment to be ready before considering it failed.
    progress-deadline: "600s"

    # Sets the queue proxy's CPU request.
    # If omitted, a default value (currently "25m"), is used.
    queue-sidecar-cpu-request: "25m"

    # Sets the queue proxy's CPU limit.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-cpu-limit: "1000m"

    # Sets the queue proxy's memory request.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-memory-request: "400Mi"

    # Sets the queue proxy's memory limit.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-memory-limit: "800Mi"

    # Sets the queue proxy's ephemeral storage request.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-ephemeral-storage-request: "512Mi"

    # Sets the queue proxy's ephemeral storage limit.
    # If omitted, no value is specified and the system default is used.
    queue-sidecar-ephemeral-storage-limit: "1024Mi"

    # The freezer service endpoint that queue-proxy calls when its traffic drops to zero or
    # scales up from zero.
    #
    # Freezer service is available at: https://github.com/knative-sandbox/container-freezer
    # or users may write their own service.
    #
    # The value will need to include both the host and the port that will be accessed.
    # For the host, $HOST_IP can be passed, and the appropriate host IP value will be swapped
    # in at runtime, which will enable the freezer daemonset to be reachable via the node IP.
    #
    # As an example:
    #     concurrency-state-endpoint: "http://$HOST_IP:9696"
    #
    # If not set, queue proxy takes no action (this is the default behavior).
    #
    # When enabled, a serviceAccountToken will be mounted to queue-proxy using
    # a projected volume. This requires the Service Account Token Volume Projection feature
    # to be enabled. For details, see this link:
    # https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#service-account-token-volume-projection
    #
    # NOTE THAT THIS IS AN EXPERIMENTAL / ALPHA FEATURE
    concurrency-state-endpoint: ""
  progressDeadline: 600s
  queueSidecarImage: ghcr.io/lanzhiwang/knative-releases/knative.dev/serving/cmd/queue:v1.2.5
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: dd7ee769
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-deployment
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # Default value for domain.
    # Although it will match all routes, it is the least-specific rule so it
    # will only be used if no other domain matches.
    example.com: |

    # These are example settings of domain.
    # example.org will be used for routes having app=nonprofit.
    example.org: |
      selector:
        app: nonprofit

    # Routes having the cluster domain suffix (by default 'svc.cluster.local')
    # will not be exposed through Ingress. You can define your own label
    # selector to assign that domain suffix to your Route here, or you can set
    # the label
    #    "networking.knative.dev/visibility=cluster-local"
    # to achieve the same effect.  This shows how to make routes having
    # the label app=secret only exposed to the local cluster.
    svc.cluster.local: |
      selector:
        app: secret
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: 81552d0b
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-domain
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |-
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # Indicates whether multi container support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#multi-containers
    multi-container: "enabled"

    # Indicates whether Kubernetes affinity support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-affinity
    kubernetes.podspec-affinity: "disabled"

    # Indicates whether Kubernetes hostAliases support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-host-aliases
    kubernetes.podspec-hostaliases: "disabled"

    # Indicates whether Kubernetes nodeSelector support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-selector
    kubernetes.podspec-nodeselector: "disabled"

    # Indicates whether Kubernetes tolerations support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-toleration
    kubernetes.podspec-tolerations: "disabled"

    # Indicates whether Kubernetes FieldRef support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-fieldref
    kubernetes.podspec-fieldref: "disabled"

    # Indicates whether Kubernetes RuntimeClassName support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-runtime-class
    kubernetes.podspec-runtimeclassname: "disabled"

    # This feature allows end-users to set a subset of fields on the Pod's SecurityContext
    #
    # When set to "enabled" or "allowed" it allows the following
    # PodSecurityContext properties:
    # - FSGroup
    # - RunAsGroup
    # - RunAsNonRoot
    # - SupplementalGroups
    # - RunAsUser
    #
    # This feature flag should be used with caution as the PodSecurityContext
    # properties may have a side-effect on non-user sidecar containers that come
    # from Knative or your service mesh
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-security-context
    kubernetes.podspec-securitycontext: "disabled"

    # Indicates whether Kubernetes PriorityClassName support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-priority-class-name
    kubernetes.podspec-priorityclassname: "disabled"

    # Indicates whether Kubernetes SchedulerName support is enabled
    #
    # WARNING: Cannot safely be disabled once enabled.
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-scheduler-name
    kubernetes.podspec-schedulername: "disabled"

    # This feature flag allows end-users to add a subset of capabilities on the Pod's SecurityContext.
    #
    # When set to "enabled" or "allowed" it allows capabilities to be added to the container.
    # For a list of possible capabilities, see https://man7.org/linux/man-pages/man7/capabilities.7.html
    kubernetes.containerspec-addcapabilities: "disabled"

    # This feature validates PodSpecs from the validating webhook
    # against the K8s API Server.
    #
    # When "enabled", the server will always run the extra validation.
    # When "allowed", the server will not run the dry-run validation by default.
    #   However, clients may enable the behavior on an individual Service by
    #   attaching the following metadata annotation: "features.knative.dev/podspec-dryrun":"enabled".
    # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-dry-run
    kubernetes.podspec-dryrun: "allowed"

    # Controls whether tag header based routing feature are enabled or not.
    # 1. Enabled: enabling tag header based routing
    # 2. Disabled: disabling tag header based routing
    # See: https://knative.dev/docs/serving/feature-flags/#tag-header-based-routing
    tag-header-based-routing: "disabled"

    # Controls whether http2 auto-detection should be enabled or not.
    # 1. Enabled: http2 connection will be attempted via upgrade.
    # 2. Disabled: http2 connection will only be attempted when port name is set to "h2c".
    autodetect-http2: "disabled"

    # Controls whether volume support for EmptyDir is enabled or not.
    # 1. Enabled: enabling EmptyDir volume support
    # 2. Disabled: disabling EmptyDir volume support
    kubernetes.podspec-volumes-emptydir: "disabled"

    # Controls whether init containers support is enabled or not.
    # 1. Enabled: enabling init containers support
    # 2. Disabled: disabling init containers support
    kubernetes.podspec-init-containers: "disabled"

    # Controls whether persistent volume claim support is enabled or not.
    # 1. Enabled: enabling persistent volume claim support
    # 2. Disabled: disabling persistent volume claim support
    kubernetes.podspec-persistent-volume-claim: "disabled"

    # Controls whether write access for persistent volumes is enabled or not.
    # 1. Enabled: enabling write access for persistent volumes
    # 2. Disabled: disabling write access for persistent volumes
    kubernetes.podspec-persistent-volume-write: "disabled"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: d9e300ba
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-features
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.


    # ---------------------------------------
    # Garbage Collector Settings
    # ---------------------------------------
    #
    # Active
    #   * Revisions which are referenced by a Route are considered active.
    #   * Individual revisions may be marked with the annotation
    #      "serving.knative.dev/no-gc":"true" to be permanently considered active.
    #   * Active revisions are not considered for GC.
    # Retention
    #   * Revisions are retained if they are any of the following:
    #       1. Active
    #       2. Were created within "retain-since-create-time"
    #       3. Were last referenced by a route within
    #           "retain-since-last-active-time"
    #       4. There are fewer than "min-non-active-revisions"
    #     If none of these conditions are met, or if the count of revisions exceed
    #      "max-non-active-revisions", they will be deleted by GC.
    #     The special value "disabled" may be used to turn off these limits.
    #
    # Example config to immediately collect any inactive revision:
    #    min-non-active-revisions: "0"
    #    retain-since-create-time: "disabled"
    #    retain-since-last-active-time: "disabled"
    #
    # Example config to always keep around the last ten non-active revisions:
    #     retain-since-create-time: "disabled"
    #     retain-since-last-active-time: "disabled"
    #     max-non-active-revisions: "10"
    #
    # Example config to disable all GC:
    #     retain-since-create-time: "disabled"
    #     retain-since-last-active-time: "disabled"
    #     max-non-active-revisions: "disabled"
    #
    # Example config to keep recently deployed or active revisions,
    # always maintain the last two in case of rollback, and prevent
    # burst activity from exploding the count of old revisions:
    #      retain-since-create-time: "48h"
    #      retain-since-last-active-time: "15h"
    #      min-non-active-revisions: "2"
    #      max-non-active-revisions: "1000"

    # Duration since creation before considering a revision for GC or "disabled".
    retain-since-create-time: "48h"

    # Duration since active before considering a revision for GC or "disabled".
    retain-since-last-active-time: "15h"

    # Minimum number of non-active revisions to retain.
    min-non-active-revisions: "20"

    # Maximum number of non-active revisions to retain
    # or "disabled" to disable any maximum limit.
    max-non-active-revisions: "1000"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: 51b4d68a
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-gc
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # A gateway and Istio service to serve external traffic.
    # The configuration format should be
    # `gateway.{{gateway_namespace}}.{{gateway_name}}: "{{ingress_name}}.{{ingress_namespace}}.svc.cluster.local"`.
    # The {{gateway_namespace}} is optional; when it is omitted, the system will search for
    # the gateway in the serving system namespace `knative-serving`
    gateway.knative-serving.knative-ingress-gateway: "istio-ingressgateway.istio-system.svc.cluster.local"

    # A cluster local gateway to allow pods outside of the mesh to access
    # Services and Routes not exposing through an ingress.  If the users
    # do have a service mesh setup, this isn't required and can be removed.
    #
    # An example use case is when users want to use Istio without any
    # sidecar injection (like Knative's istio-ci-no-mesh.yaml).  Since every pod
    # is outside of the service mesh in that case, a cluster-local  service
    # will need to be exposed to a cluster-local gateway to be accessible.
    # The configuration format should be `local-gateway.{{local_gateway_namespace}}.
    # {{local_gateway_name}}: "{{cluster_local_gateway_name}}.
    # {{cluster_local_gateway_namespace}}.svc.cluster.local"`. The
    # {{local_gateway_namespace}} is optional; when it is omitted, the system
    # will search for the local gateway in the serving system namespace
    # `knative-serving`
    local-gateway.knative-serving.knative-local-gateway: "knative-local-gateway.istio-system.svc.cluster.local"

    # DEPRECATED: local-gateway.mesh is deprecated.
    # See: https://github.com/knative/serving/issues/11523
    #
    # To use only Istio service mesh and no knative-local-gateway, replace
    # all local-gateway.* entries by the following entry.
    local-gateway.mesh: "mesh"

    # If true, knative will use the Istio VirtualService's status to determine
    # endpoint readiness. Otherwise, probe as usual.
    # NOTE: This feature is currently experimental and should not be used in production.
    enable-virtualservice-status: "false"
  gateway.kubeflow.kubeflow-gateway: istio-ingressgateway.istio-system.svc.cluster.local
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: config-istio
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # lease-duration is how long non-leaders will wait to try to acquire the
    # lock; 15 seconds is the value used by core kubernetes controllers.
    lease-duration: "60s"

    # renew-deadline is how long a leader will try to renew the lease before
    # giving up; 10 seconds is the value used by core kubernetes controllers.
    renew-deadline: "40s"

    # retry-period is how long the leader election client waits between tries of
    # actions; 2 seconds is the value used by core kubernetes controllers.
    retry-period: "10s"

    # buckets is the number of buckets used to partition key space of each
    # Reconciler. If this number is M and the replica number of the controller
    # is N, the N replicas will compete for the M buckets. The owner of a
    # bucket will take care of the reconciling for the keys partitioned into
    # that bucket.
    buckets: "1"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: f4b71f57
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-leader-election
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # Common configuration for all Knative codebase
    zap-logger-config: |
      {
        "level": "info",
        "development": false,
        "outputPaths": ["stdout"],
        "errorOutputPaths": ["stderr"],
        "encoding": "json",
        "encoderConfig": {
          "timeKey": "timestamp",
          "levelKey": "severity",
          "nameKey": "logger",
          "callerKey": "caller",
          "messageKey": "message",
          "stacktraceKey": "stacktrace",
          "lineEnding": "",
          "levelEncoder": "",
          "timeEncoder": "iso8601",
          "durationEncoder": "",
          "callerEncoder": ""
        }
      }

    # Log level overrides
    # For all components except the queue proxy,
    # changes are picked up immediately.
    # For queue proxy, changes require recreation of the pods.
    loglevel.controller: "info"
    loglevel.autoscaler: "info"
    loglevel.queueproxy: "info"
    loglevel.webhook: "info"
    loglevel.activator: "info"
    loglevel.hpaautoscaler: "info"
    loglevel.net-certmanager-controller: "info"
    loglevel.net-istio-controller: "info"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: be93ff10
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-logging
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # ingress-class specifies the default ingress class
    # to use when not dictated by Route annotation.
    #
    # If not specified, will use the Istio ingress.
    #
    # Note that changing the Ingress class of an existing Route
    # will result in undefined behavior.  Therefore it is best to only
    # update this value during the setup of Knative, to avoid getting
    # undefined behavior.
    ingress-class: "istio.ingress.networking.knative.dev"

    # certificate-class specifies the default Certificate class
    # to use when not dictated by Route annotation.
    #
    # If not specified, will use the Cert-Manager Certificate.
    #
    # Note that changing the Certificate class of an existing Route
    # will result in undefined behavior.  Therefore it is best to only
    # update this value during the setup of Knative, to avoid getting
    # undefined behavior.
    certificate-class: "cert-manager.certificate.networking.knative.dev"

    # namespace-wildcard-cert-selector specifies a LabelSelector which
    # determines which namespaces should have a wildcard certificate
    # provisioned.
    #
    # Use an empty value to disable the feature (this is the default):
    #   namespace-wildcard-cert-selector: ""
    #
    # Use an empty object to enable for all namespaces
    #   namespace-wildcard-cert-selector: {}
    #
    # Useful labels include the "kubernetes.io/metadata.name" label to
    # avoid provisioning a certifcate for the "kube-system" namespaces.
    # Use the following selector to match pre-1.0 behavior of using
    # "networking.knative.dev/disableWildcardCert" to exclude namespaces:
    #
    # matchExpressions:
    # - key: "networking.knative.dev/disableWildcardCert"
    #   operator: "NotIn"
    #   values: ["true"]
    namespace-wildcard-cert-selector: ""

    # domain-template specifies the golang text template string to use
    # when constructing the Knative service's DNS name. The default
    # value is "{{.Name}}.{{.Namespace}}.{{.Domain}}".
    #
    # Valid variables defined in the template include Name, Namespace, Domain,
    # Labels, and Annotations. Name will be the result of the tagTemplate
    # below, if a tag is specified for the route.
    #
    # Changing this value might be necessary when the extra levels in
    # the domain name generated is problematic for wildcard certificates
    # that only support a single level of domain name added to the
    # certificate's domain. In those cases you might consider using a value
    # of "{{.Name}}-{{.Namespace}}.{{.Domain}}", or removing the Namespace
    # entirely from the template. When choosing a new value be thoughtful
    # of the potential for conflicts - for example, when users choose to use
    # characters such as `-` in their service, or namespace, names.
    # {{.Annotations}} or {{.Labels}} can be used for any customization in the
    # go template if needed.
    # We strongly recommend keeping namespace part of the template to avoid
    # domain name clashes:
    # eg. '{{.Name}}-{{.Namespace}}.{{ index .Annotations "sub"}}.{{.Domain}}'
    # and you have an annotation {"sub":"foo"}, then the generated template
    # would be {Name}-{Namespace}.foo.{Domain}
    domain-template: "{{.Name}}.{{.Namespace}}.{{.Domain}}"

    # tagTemplate specifies the golang text template string to use
    # when constructing the DNS name for "tags" within the traffic blocks
    # of Routes and Configuration.  This is used in conjunction with the
    # domainTemplate above to determine the full URL for the tag.
    tag-template: "{{.Tag}}-{{.Name}}"

    # Controls whether TLS certificates are automatically provisioned and
    # installed in the Knative ingress to terminate external TLS connection.
    # 1. Enabled: enabling auto-TLS feature.
    # 2. Disabled: disabling auto-TLS feature.
    auto-tls: "Disabled"

    # Controls the behavior of the HTTP endpoint for the Knative ingress.
    # It requires autoTLS to be enabled.
    # 1. Enabled: The Knative ingress will be able to serve HTTP connection.
    # 2. Redirected: The Knative ingress will send a 301 redirect for all
    # http connections, asking the clients to use HTTPS.
    #
    # "Disabled" option is deprecated.
    http-protocol: "Enabled"

    # rollout-duration contains the minimal duration in seconds over which the
    # Configuration traffic targets are rolled out to the newest revision.
    rollout-duration: "0"

    # autocreate-cluster-domain-claims controls whether ClusterDomainClaims should
    # be automatically created (and deleted) as needed when DomainMappings are
    # reconciled.
    #
    # If this is "false" (the default), the cluster administrator is
    # responsible for creating ClusterDomainClaims and delegating them to
    # namespaces via their spec.Namespace field. This setting should be used in
    # multitenant environments which need to control which namespace can use a
    # particular domain name in a domain mapping.
    #
    # If this is "true", users are able to associate arbitrary names with their
    # services via the DomainMapping feature.
    autocreate-cluster-domain-claims: "false"

    # If true, networking plugins can add additional information to deployed
    # applications to make their pods directly accessible via their IPs even if mesh is
    # enabled and thus direct-addressability is usually not possible.
    # Consumers like Knative Serving can use this setting to adjust their behavior
    # accordingly, i.e. to drop fallback solutions for non-pod-addressable systems.
    #
    # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
    #       for now. Use with caution.
    enable-mesh-pod-addressability: "false"

    # mesh-compatibility-mode indicates whether consumers of network plugins
    # should directly contact Pod IPs (most efficient), or should use the
    # Cluster IP (less efficient, needed when mesh is enabled unless
    # `enable-mesh-pod-addressability`, above, is set).
    # Permitted values are:
    #  - "auto" (default): automatically determine which mesh mode to use by trying Pod IP and falling back to Cluster IP as needed.
    #  - "enabled": always use Cluster IP and do not attempt to use Pod IPs.
    #  - "disabled": always use Pod IPs and do not fall back to Cluster IP on failure.
    mesh-compatibility-mode: "auto"

    # Defines the scheme used for external URLs if autoTLS is not enabled.
    # This can be used for making Knative report all URLs as "HTTPS" for example, if you're
    # fronting Knative with an external loadbalancer that deals with TLS termination and
    # Knative doesn't know about that otherwise.
    default-external-scheme: "http"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: 6e2033e0
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-network
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # logging.enable-var-log-collection defaults to false.
    # The fluentd daemon set will be set up to collect /var/log if
    # this flag is true.
    logging.enable-var-log-collection: "false"

    # logging.revision-url-template provides a template to use for producing the
    # logging URL that is injected into the status of each Revision.
    logging.revision-url-template: "http://logging.example.com/?revisionUID=${REVISION_UID}"

    # If non-empty, this enables queue proxy writing user request logs to stdout, excluding probe
    # requests.
    # NB: after 0.18 release logging.enable-request-log must be explicitly set to true
    # in order for request logging to be enabled.
    #
    # The value determines the shape of the request logs and it must be a valid go text/template.
    # It is important to keep this as a single line. Multiple lines are parsed as separate entities
    # by most collection agents and will split the request logs into multiple records.
    #
    # The following fields and functions are available to the template:
    #
    # Request: An http.Request (see https://golang.org/pkg/net/http/#Request)
    # representing an HTTP request received by the server.
    #
    # Response:
    # struct {
    #   Code    int       // HTTP status code (see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)
    #   Size    int       // An int representing the size of the response.
    #   Latency float64   // A float64 representing the latency of the response in seconds.
    # }
    #
    # Revision:
    # struct {
    #   Name          string  // Knative revision name
    #   Namespace     string  // Knative revision namespace
    #   Service       string  // Knative service name
    #   Configuration string  // Knative configuration name
    #   PodName       string  // Name of the pod hosting the revision
    #   PodIP         string  // IP of the pod hosting the revision
    # }
    #
    logging.request-log-template: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl": "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}", "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent": "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp": "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s", "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'

    # If true, the request logging will be enabled.
    # NB: up to and including Knative version 0.18 if logging.request-log-template is non-empty, this value
    # will be ignored.
    logging.enable-request-log: "false"

    # If true, this enables queue proxy writing request logs for probe requests to stdout.
    # It uses the same template for user requests, i.e. logging.request-log-template.
    logging.enable-probe-request-log: "false"

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or opencensus.
    metrics.backend-destination: prometheus

    # metrics.request-metrics-backend-destination specifies the request metrics
    # destination. It enables queue proxy to send request metrics.
    # Currently supported values: prometheus (the default), opencensus.
    metrics.request-metrics-backend-destination: prometheus

    # profiling.enable indicates whether it is allowed to retrieve runtime profiling data from
    # the pods via an HTTP server in the format expected by the pprof visualization tool. When
    # enabled, the Knative Serving pods expose the profiling data on an alternate HTTP port 8008.
    # The HTTP context root for profiling is then /debug/pprof/.
    profiling.enable: "false"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: fed4756e
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-observability
  namespace: knative-serving
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
    #
    # This may be "zipkin" or "none" (default)
    backend: "none"

    # URL to zipkin collector where traces are sent.
    # This must be specified when backend is "zipkin"
    zipkin-endpoint: "http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans"

    # Enable zipkin debug mode. This allows all spans to be sent to the server
    # bypassing sampling.
    debug: "false"

    # Percentage (0-1) of requests to trace
    sample-rate: "0.1"
kind: ConfigMap
metadata:
  annotations:
    knative.dev/example-checksum: "26614636"
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config-tracing
  namespace: knative-serving
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-webhook-certs
  namespace: knative-eventing
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: domain-mapping
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: domainmapping-webhook-certs
  namespace: knative-serving
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: net-istio-webhook-certs
  namespace: knative-serving
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: webhook-certs
  namespace: knative-serving
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cluster-local-gateway
    install.operator.istio.io/owning-resource: unknown
    istio: cluster-local-gateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: cluster-local-gateway
  namespace: istio-system
spec:
  ports:
    - name: status-port
      port: 15020
      protocol: TCP
      targetPort: 15020
    - name: http2
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: cluster-local-gateway
    istio: cluster-local-gateway
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    experimental.istio.io/disable-gateway-port-translation: "true"
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: knative-local-gateway
  namespace: istio-system
spec:
  ports:
    - name: http2
      port: 80
      targetPort: 8081
  selector:
    app: cluster-local-gateway
    istio: cluster-local-gateway
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
    role: eventing-webhook
  name: eventing-webhook
  namespace: knative-eventing
spec:
  ports:
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    kustomize.component: knative
    role: eventing-webhook
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: activator
    app.kubernetes.io/component: activator
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: activator-service
  namespace: knative-serving
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: http
      port: 80
      targetPort: 8012
    - name: http2
      port: 81
      targetPort: 8013
  selector:
    app: activator
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: autoscaler
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: autoscaler
  namespace: knative-serving
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: autoscaler
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: controller
  namespace: knative-serving
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
  selector:
    app: controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: domain-mapping
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    role: domainmapping-webhook
    serving.knative.dev/release: v1.2.5
  name: domainmapping-webhook
  namespace: knative-serving
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    role: domainmapping-webhook
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    role: net-istio-webhook
    serving.knative.dev/release: v1.2.0
  name: net-istio-webhook
  namespace: knative-serving
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    app: net-istio-webhook
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    role: webhook
    serving.knative.dev/release: v1.2.5
  name: webhook
  namespace: knative-serving
spec:
  ports:
    - name: http-metrics
      port: 9090
      targetPort: 9090
    - name: http-profiling
      port: 8008
      targetPort: 8008
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    role: webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cluster-local-gateway
    install.operator.istio.io/owning-resource: unknown
    istio: cluster-local-gateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  name: cluster-local-gateway
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: cluster-local-gateway
      istio: cluster-local-gateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: cluster-local-gateway
        chart: gateways
        heritage: Tiller
        install.operator.istio.io/owning-resource: unknown
        istio: cluster-local-gateway
        istio.io/rev: default
        operator.istio.io/component: IngressGateways
        release: istio
        service.istio.io/canonical-name: cluster-local-gateway
        service.istio.io/canonical-revision: latest
        sidecar.istio.io/inject: "false"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
              weight: 2
            - preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - arm64
              weight: 2
            - preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - s390x
              weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                      - s390x
      containers:
        - args:
            - proxy
            - router
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --proxyLogLevel=warning
            - --proxyComponentLogLevel=misc:error
            - --log_output_level=default:info
          env:
            - name: ISTIO_META_ROUTER_MODE
              value: sni-dnat
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: CA_ADDR
              value: istiod.istio-system.svc:15012
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: ISTIO_META_WORKLOAD_NAME
              value: cluster-local-gateway
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/apps/v1/namespaces/istio-system/deployments/cluster-local-gateway
            - name: ISTIO_META_MESH_ID
              value: cluster.local
            - name: TRUST_DOMAIN
              value: cluster.local
            - name: ISTIO_META_UNPRIVILEGED_POD
              value: "true"
            - name: ISTIO_META_CLUSTER_ID
              value: Kubernetes
          image: docker.io/istio/proxyv2:1.14.1
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
            - containerPort: 15020
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
            - containerPort: 15090
              name: http-envoy-prom
              protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /var/run/secrets/workload-spiffe-uds
              name: workload-socket
            - mountPath: /var/run/secrets/workload-spiffe-credentials
              name: workload-certs
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /etc/istio/config
              name: config-volume
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - mountPath: /var/run/secrets/tokens
              name: istio-token
              readOnly: true
            - mountPath: /var/lib/istio/data
              name: istio-data
            - mountPath: /etc/istio/pod
              name: podinfo
            - mountPath: /etc/istio/ingressgateway-certs
              name: ingressgateway-certs
              readOnly: true
            - mountPath: /etc/istio/ingressgateway-ca-certs
              name: ingressgateway-ca-certs
              readOnly: true
      securityContext:
        fsGroup: 1337
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      serviceAccountName: cluster-local-gateway-service-account
      volumes:
        - emptyDir: {}
          name: workload-socket
        - emptyDir: {}
          name: workload-certs
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - downwardAPI:
            items:
              - fieldRef:
                  fieldPath: metadata.labels
                path: labels
              - fieldRef:
                  fieldPath: metadata.annotations
                path: annotations
          name: podinfo
        - emptyDir: {}
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: istio-ca
                  expirationSeconds: 43200
                  path: istio-token
        - configMap:
            name: istio
            optional: true
          name: config-volume
        - name: ingressgateway-certs
          secret:
            optional: true
            secretName: istio-ingressgateway-certs
        - name: ingressgateway-ca-certs
          secret:
            optional: true
            secretName: istio-ingressgateway-ca-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    knative.dev/high-availability: "true"
    kustomize.component: knative
  name: eventing-controller
  namespace: knative-eventing
spec:
  selector:
    matchLabels:
      app: eventing-controller
      app.kubernetes.io/component: knative-eventing
      app.kubernetes.io/name: knative-eventing
      kustomize.component: knative
  template:
    metadata:
      labels:
        app: eventing-controller
        app.kubernetes.io/component: knative-eventing
        app.kubernetes.io/name: knative-eventing
        app.kubernetes.io/version: 1.2.4
        eventing.knative.dev/release: v1.2.4
        kustomize.component: knative
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: eventing-controller
                    app.kubernetes.io/component: knative-eventing
                    app.kubernetes.io/name: knative-eventing
                    kustomize.component: knative
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: APISERVER_RA_IMAGE
              value: ghcr.io/lanzhiwang/knative-releases/knative.dev/eventing/cmd/apiserver_receive_adapter:5b672eedd343
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/eventing/cmd/controller:v1.2.4
          name: eventing-controller
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePolicy: FallbackToLogsOnError
      enableServiceLinks: false
      serviceAccountName: eventing-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-webhook
  namespace: knative-eventing
spec:
  selector:
    matchLabels:
      app: eventing-webhook
      app.kubernetes.io/component: knative-eventing
      app.kubernetes.io/name: knative-eventing
      kustomize.component: knative
      role: eventing-webhook
  template:
    metadata:
      labels:
        app: eventing-webhook
        app.kubernetes.io/component: knative-eventing
        app.kubernetes.io/name: knative-eventing
        app.kubernetes.io/version: 1.2.4
        eventing.knative.dev/release: v1.2.4
        kustomize.component: knative
        role: eventing-webhook
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: eventing-webhook
                    app.kubernetes.io/component: knative-eventing
                    app.kubernetes.io/name: knative-eventing
                    kustomize.component: knative
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: WEBHOOK_NAME
              value: eventing-webhook
            - name: WEBHOOK_PORT
              value: "8443"
            - name: SINK_BINDING_SELECTION_MODE
              value: exclusion
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/eventing/cmd/webhook:v1.2.4
          livenessProbe:
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 1
          name: eventing-webhook
          ports:
            - containerPort: 8443
              name: https-webhook
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          readinessProbe:
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
              port: 8443
              scheme: HTTPS
            periodSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePolicy: FallbackToLogsOnError
      enableServiceLinks: false
      serviceAccountName: eventing-webhook
      terminationGracePeriodSeconds: 300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: pingsource-mt-adapter
  namespace: knative-eventing
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: knative-eventing
      app.kubernetes.io/name: knative-eventing
      eventing.knative.dev/source: ping-source-controller
      kustomize.component: knative
      sources.knative.dev/role: adapter
  template:
    metadata:
      labels:
        app.kubernetes.io/component: knative-eventing
        app.kubernetes.io/name: knative-eventing
        app.kubernetes.io/version: 1.2.4
        eventing.knative.dev/release: v1.2.4
        eventing.knative.dev/source: ping-source-controller
        kustomize.component: knative
        sources.knative.dev/role: adapter
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: knative-eventing
                    app.kubernetes.io/name: knative-eventing
                    eventing.knative.dev/source: ping-source-controller
                    kustomize.component: knative
                    sources.knative.dev/role: adapter
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              value: ""
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K_METRICS_CONFIG
              value: ""
            - name: K_LOGGING_CONFIG
              value: ""
            - name: K_LEADER_ELECTION_CONFIG
              value: ""
            - name: K_NO_SHUTDOWN_AFTER
              value: ""
            - name: K_SINK_TIMEOUT
              value: "-1"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/eventing/cmd/mtping:v1.2.4
          name: dispatcher
          ports:
            - containerPort: 9090
              name: metrics
              protocol: TCP
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 125m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      enableServiceLinks: false
      serviceAccountName: pingsource-mt-adapter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: activator
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: activator
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: activator
      role: activator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "true"
      labels:
        app: activator
        app.kubernetes.io/component: activator
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.2.5
        role: activator
        serving.knative.dev/release: v1.2.5
    spec:
      containers:
        - env:
            - name: GOGC
              value: "500"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/serving/cmd/activator:v1.2.5
          livenessProbe:
            failureThreshold: 12
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: activator
              port: 8012
            initialDelaySeconds: 15
            periodSeconds: 10
          name: activator
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8012
              name: http1
            - containerPort: 8013
              name: h2c
          readinessProbe:
            failureThreshold: 5
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: activator
              port: 8012
            periodSeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 600Mi
            requests:
              cpu: 300m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: controller
      terminationGracePeriodSeconds: 600
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: autoscaler
  namespace: knative-serving
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoscaler
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "true"
      labels:
        app: autoscaler
        app.kubernetes.io/component: autoscaler
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.2.5
        serving.knative.dev/release: v1.2.5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: autoscaler
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/serving/cmd/autoscaler:v1.2.5
          livenessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: autoscaler
              port: 8080
          name: autoscaler
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8080
              name: websocket
          readinessProbe:
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: autoscaler
              port: 8080
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: controller
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        sidecar.istio.io/inject: "true"
      labels:
        app: controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.2.5
        serving.knative.dev/release: v1.2.5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: controller
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/serving/cmd/controller:v1.2.5
          name: controller
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: domain-mapping
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: domain-mapping
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: domain-mapping
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        sidecar.istio.io/inject: "true"
      labels:
        app: domain-mapping
        app.kubernetes.io/component: domain-mapping
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.2.5
        serving.knative.dev/release: v1.2.5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: domain-mapping
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/serving/cmd/domain-mapping:v1.2.5
          name: domain-mapping
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          resources:
            limits:
              cpu: 300m
              memory: 400Mi
            requests:
              cpu: 30m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: domain-mapping
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: domainmapping-webhook
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: domainmapping-webhook
      role: domainmapping-webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "true"
      labels:
        app: domainmapping-webhook
        app.kubernetes.io/component: domain-mapping
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.2.5
        role: domainmapping-webhook
        serving.knative.dev/release: v1.2.5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: domainmapping-webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: WEBHOOK_PORT
              value: "8443"
            - name: METRICS_DOMAIN
              value: knative.dev/serving
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/serving/cmd/domain-mapping-webhook:v1.2.5
          livenessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 1
          name: domainmapping-webhook
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8443
              name: https-webhook
          readinessProbe:
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
              port: 8443
              scheme: HTTPS
            periodSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: controller
      terminationGracePeriodSeconds: 300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: net-istio-controller
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: net-istio-controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        sidecar.istio.io/inject: "true"
      labels:
        app: net-istio-controller
        app.kubernetes.io/component: net-istio
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.2.0
        serving.knative.dev/release: v1.2.0
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/net-istio
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/net-istio/cmd/controller:v1.2.0
          name: controller
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
          resources:
            limits:
              cpu: 300m
              memory: 400Mi
            requests:
              cpu: 30m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: net-istio-webhook
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: net-istio-webhook
      role: net-istio-webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "true"
      labels:
        app: net-istio-webhook
        app.kubernetes.io/component: net-istio
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.2.0
        role: net-istio-webhook
        serving.knative.dev/release: v1.2.0
    spec:
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/net-istio
            - name: WEBHOOK_NAME
              value: net-istio-webhook
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/net-istio/cmd/webhook:v1.2.0
          name: webhook
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8443
              name: https-webhook
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
      serviceAccountName: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: webhook
  namespace: knative-serving
spec:
  selector:
    matchLabels:
      app: webhook
      role: webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "true"
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: 1.2.5
        role: webhook
        serving.knative.dev/release: v1.2.5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: WEBHOOK_NAME
              value: webhook
            - name: WEBHOOK_PORT
              value: "8443"
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
          image: ghcr.io/lanzhiwang/knative-releases/knative.dev/serving/cmd/webhook:v1.2.5
          livenessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 1
          name: webhook
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8443
              name: https-webhook
          readinessProbe:
            httpGet:
              httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
              port: 8443
              scheme: HTTPS
            periodSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      serviceAccountName: controller
      terminationGracePeriodSeconds: 300
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: activator
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: activator-pdb
  namespace: knative-serving
spec:
  minAvailable: 80%
  selector:
    matchLabels:
      app: activator
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: webhook-pdb
  namespace: knative-serving
spec:
  minAvailable: 80%
  selector:
    matchLabels:
      app: webhook
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-webhook
  namespace: knative-eventing
spec:
  minAvailable: 80%
  selector:
    matchLabels:
      app: eventing-webhook
      app.kubernetes.io/component: knative-eventing
      app.kubernetes.io/name: knative-eventing
      kustomize.component: knative
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: eventing-webhook
  namespace: knative-eventing
spec:
  maxReplicas: 5
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 100
          type: Utilization
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: eventing-webhook
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/component: activator
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: activator
  namespace: knative-serving
spec:
  maxReplicas: 20
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 100
          type: Utilization
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: activator
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: webhook
  namespace: knative-serving
spec:
  maxReplicas: 5
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 100
          type: Utilization
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: webhook
---
apiVersion: caching.internal.knative.dev/v1alpha1
kind: Image
metadata:
  labels:
    app.kubernetes.io/component: queue-proxy
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: queue-proxy
  namespace: knative-serving
spec:
  image: ghcr.io/lanzhiwang/knative-releases/knative.dev/serving/cmd/queue:v1.2.5
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: knative
  namespace: knative-serving
spec:
  host: "*.knative-serving.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  labels:
    release: istio
  name: cluster-local-gateway
  namespace: istio-system
spec:
  selector:
    app: cluster-local-gateway
    istio: cluster-local-gateway
  servers:
    - hosts:
        - "*"
      port:
        name: http
        number: 80
        protocol: HTTP
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: knative-local-gateway
  namespace: knative-serving
spec:
  selector:
    app: cluster-local-gateway
    istio: cluster-local-gateway
  servers:
    - hosts:
        - "*"
      port:
        name: http
        number: 8081
        protocol: HTTP
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: cluster-local-gateway
  namespace: istio-system
spec:
  action: ALLOW
  rules:
    - {}
  selector:
    matchLabels:
      app: cluster-local-gateway
      istio: cluster-local-gateway
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: activator-service
  namespace: knative-serving
spec:
  action: ALLOW
  rules:
    - {}
  selector:
    matchLabels:
      app: activator
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: autoscaler
  namespace: knative-serving
spec:
  action: ALLOW
  rules:
    - {}
  selector:
    matchLabels:
      app: autoscaler
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: controller
  namespace: knative-serving
spec:
  action: ALLOW
  rules:
    - {}
  selector:
    matchLabels:
      app: controller
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: istio-webhook
  namespace: knative-serving
spec:
  action: ALLOW
  rules:
    - {}
  selector:
    matchLabels:
      app: net-istio-webhook
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: webhook
  namespace: knative-serving
spec:
  action: ALLOW
  rules:
    - {}
  selector:
    matchLabels:
      role: webhook
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: domainmapping-webhook
  namespace: knative-serving
spec:
  portLevelMtls:
    "8443":
      mode: PERMISSIVE
  selector:
    matchLabels:
      app: domainmapping-webhook
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: net-istio-webhook
  namespace: knative-serving
spec:
  portLevelMtls:
    "8443":
      mode: PERMISSIVE
  selector:
    matchLabels:
      app: net-istio-webhook
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: webhook
  namespace: knative-serving
spec:
  portLevelMtls:
    "8443":
      mode: PERMISSIVE
  selector:
    matchLabels:
      app: webhook
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: sinkbindings.webhook.sources.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: eventing-webhook
        namespace: knative-eventing
    failurePolicy: Fail
    name: sinkbindings.webhook.sources.knative.dev
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: domain-mapping
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: webhook.domainmapping.serving.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: domainmapping-webhook
        namespace: knative-serving
    failurePolicy: Fail
    name: webhook.domainmapping.serving.knative.dev
    rules:
      - apiGroups:
          - serving.knative.dev
        apiVersions:
          - v1alpha1
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - domainmappings
        scope: "*"
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: webhook.eventing.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: eventing-webhook
        namespace: knative-eventing
    failurePolicy: Fail
    name: webhook.eventing.knative.dev
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: webhook.istio.networking.internal.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: net-istio-webhook
        namespace: knative-serving
    failurePolicy: Fail
    name: webhook.istio.networking.internal.knative.dev
    objectSelector:
      matchExpressions:
        - key: serving.knative.dev/configuration
          operator: Exists
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: webhook.serving.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: webhook
        namespace: knative-serving
    failurePolicy: Fail
    name: webhook.serving.knative.dev
    rules:
      - apiGroups:
          - autoscaling.internal.knative.dev
          - networking.internal.knative.dev
          - serving.knative.dev
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
        resources:
          - metrics
          - podautoscalers
          - certificates
          - ingresses
          - serverlessservices
          - configurations
          - revisions
          - routes
          - services
        scope: "*"
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: config.webhook.eventing.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: eventing-webhook
        namespace: knative-eventing
    failurePolicy: Ignore
    name: config.webhook.eventing.knative.dev
    namespaceSelector:
      matchExpressions:
        - key: eventing.knative.dev/release
          operator: Exists
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: net-istio
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.0
    networking.knative.dev/ingress-provider: istio
    serving.knative.dev/release: v1.2.0
  name: config.webhook.istio.networking.internal.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: net-istio-webhook
        namespace: knative-serving
    failurePolicy: Fail
    name: config.webhook.istio.networking.internal.knative.dev
    namespaceSelector:
      matchExpressions:
        - key: serving.knative.dev/release
          operator: Exists
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: config.webhook.serving.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: webhook
        namespace: knative-serving
    failurePolicy: Fail
    name: config.webhook.serving.knative.dev
    namespaceSelector:
      matchExpressions:
        - key: serving.knative.dev/release
          operator: Exists
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: domain-mapping
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: validation.webhook.domainmapping.serving.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: domainmapping-webhook
        namespace: knative-serving
    failurePolicy: Fail
    name: validation.webhook.domainmapping.serving.knative.dev
    rules:
      - apiGroups:
          - serving.knative.dev
        apiVersions:
          - v1alpha1
          - v1beta1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - domainmappings
        scope: "*"
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: knative-eventing
    app.kubernetes.io/name: knative-eventing
    app.kubernetes.io/version: 1.2.4
    eventing.knative.dev/release: v1.2.4
    kustomize.component: knative
  name: validation.webhook.eventing.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: eventing-webhook
        namespace: knative-eventing
    failurePolicy: Fail
    name: validation.webhook.eventing.knative.dev
    sideEffects: None
    timeoutSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: 1.2.5
    serving.knative.dev/release: v1.2.5
  name: validation.webhook.serving.knative.dev
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: webhook
        namespace: knative-serving
    failurePolicy: Fail
    name: validation.webhook.serving.knative.dev
    rules:
      - apiGroups:
          - autoscaling.internal.knative.dev
          - networking.internal.knative.dev
          - serving.knative.dev
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - metrics
          - podautoscalers
          - certificates
          - ingresses
          - serverlessservices
          - configurations
          - revisions
          - routes
          - services
        scope: "*"
    sideEffects: None
    timeoutSeconds: 10
